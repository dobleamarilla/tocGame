BD G_GTpv

G_TABLAS_SINCRONIA
	[tabla] : nombre tabla
	[clavePrimaria]: no puede haber 2 registros con los mismos valores clave. campos con []: [x][y][z]
	[modoSincro]:
		'upload'          : cliente->servidor
		'download'        : servidor->cliente
		'upload_download' : cliente->servidor->cliente
	[producto]
	[version]
 
G_CLIENTES 
	[idCom]  : id. comunicacion (unico) dado por servidor despues de [user],[password] 
	[user]   : user (unico), solo se envia en inicializacion 
	[password]
	[producto]
	[version]
	[prefijoCliente]  : prefijo en BD en cliente
	[prefijoServidor] : prefijo tablas en BD GTpv Servidor si DBSevidor es NULL
	[DBServidor]      : si NULL -> BD GTpv. Solo para tablas especificas del cliente
	[Llicencia] : llicencia de TeclatsTpv 

	
	
Comunicación
	Cliente -> Servidor
		<gtpv>
			<init [user='' password=''] [idCom='']/>
			<db id=  >
				// id= 'sincro_download' 
				//     'sincro_upload' 
				//	   'sincro_download_UD' 
				//	   'update_sincro_upload' 
				//     'download' 
				//     'upload' 
				<exec id= ra=''>
					<columns>
						<c>column1</c>
						<c>column2</c>
						...
					</columns>
					<row>
						<v [NULL='']?>value1</v>
						<v>value2</v>
						...
						// si atributo NULL existe valor del registro = NULL
					</row>
					...
					<row>..</row>
				</exec>
				<exec>
					<error code=''>
						mensaje error
					</error>
				</exec>
				...
				<exec>
					...
				</exec>	
			</db>
			...
			<db>
				...
			</db>	
		</gtpv>	

	Servidor -> Cliente
		<gtpv>
			<init idCom='' prefijoCliente='' Llicencia=''/>
			<sesion>text</sesion>   
			<db id= "" name="" >
				{statement || exec}*

				<statement id=''>sqlQuery</statement>
				<exec id='' idStat=''>
					<a [NULL?]>value1</a>
					<a>value2</a>
					...
					// si atributo NULL existe valor del registro = NULL 
				</exec>
			</db>
			...
			<db>
				...
			</db>	
		</gtpv>		
		
		
	------
	atributo id: identificador que se copia en la salida, exec utiliza id de statement en idStat.
	
	tag: db. Comando que ejecuta ordenes sql en cliente y devuelve resultados
	
		Servidor -> Cliente
			<db name="dbName">
				<statement id="create1">CREATE TABLE [tabla] (campo1 int, campo2 text)</statement>
				<statement id="insert1">INSERT INTO [tabla] (campo1, campo2) values (?,?)</statement>
				<statement id="select1">SELECT (campo1, campo2) FROM [tabla] values (?,?)</statement>
				<exec idStat="create1">
				</exec>
				<exec idStat="insert1">
					<a>value1</a>
					<a>value2</a>
				</exec>
				<exec idStat="insert1">
					<a>value3</a>
					<a>value4</a>
				</exec>
				<exec idStat="select1">
				</exec>
			</db>
			
		En cliente
			openDatabase(dbName)
			executeSql("CREATE...",[]) -> respuestaSql : []
			executeSql("INSERT...",[value1, value2]) -> respuestaSql : []
			executeSql("INSERT...",[value3, value4]) -> respuestaSql : []
			executeSql("SELECT...",[]) -> respuestaSql : 
			                                 [{campo1:value1, campo2:value2},{campo1:value3, campo2:value4}]
					
		Cliente -> Servidor
			<db name="dbName">
				<exec>
				</exec>
				<exec>
				</exec>
				<exec>
				</exec>
				<exec>
					<campos>
						<c>campo1</c>
						<c>campo2</c>
					</campos>
					<row>
						<a>value1</a>
						<a>value2</a>
					</row>
					<row>
						<a>value3</a>
						<a>value4</a>
					</row>
				</exec> 
			</db>				
	
Protocolo
	- iniciado por el cliente
	- varios pasos (peticion, respuesta)
	- el paso se deduce del tag sesion y 
	  del contenido de la peticion del cliente=(respuesta a la consulta del servidor realizada en el cliente)
	paso 1:
		c->s: 
			<init>, sin sesion 
		c<-s: 
			<sesion>
			SELECT * FROM [Sincro_Download]
			SELECT * FROM [Sincro_Upload] WHERE ((lastSincro < lastWrite) OR (lastSincro IS NULL))
	paso 2:
		c->s: 
			<sesion>
			
		c<-s:		
	
		
Variables Globales
	$ConnDB : respuesta odbc_connect, solo hay una conexión a base de datos, 
	          se abre al inicio y se cierra al final del proceso php server.
	$Cliente : array con identificacion del cliente actual, contiene registro de G_CLIENTES
			   
			   
			   
		      		
					
					