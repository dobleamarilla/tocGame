; This file contains example extensions_custom.conf entries.
; extensions_custom.conf should be used to include customizations
; to AMP's Asterisk dialplan.

; Extensions in AMP have access to the 'from-internal' context.
; The context 'from-internal-custom' is included in 'from-internal' by default

[from-internal-custom]				
exten => 1234,1,Playback(demo-congrats)		; extensions can dial 1234
exten => 1234,2,Hangup()
exten => h,1,Hangup()
include => custom-recordme			; extensions can also dial 5678 

exten => 12345,1,Playback(an-error-has-occured)       ; extensions can dial 1234
exten => 12345,2,Hangup()
exten => h,1,Hangup()


exten => 635,1,playback(vm-dialout)
exten => 635,2,Dial(SIP/ivr@85.52.227.175,60,m)
exten => 635,3,Hangup
exten => h,1,Hangup

[macro-uridial]
exten => s,1,NoOp(Outbound SIP URI call ${ARG1} with CallerID ${CALLERID(all)})
exten => s,2,SetCIDNum(${CALLERID(all)})
exten => s,3,Dial(SIP/${ARG1})
exten => s,4,Congestion()

[from-internal-sipname]
;Meant to be able to call out sip number like user@thedomaine.com

exten => _.,1,NoOp(Incoming Call from house extension ${CALLERID} for ${EXTEN}@${SIPDOMAIN})
exten => _.,2,NoOp(Variable set to SIPDOMAIN=${SIPDOMAIN} Intranet domain=${INTRAD} and Internet domain=${INETD})
exten => _.,3,GotoIf($[${LEN(${SIPDOMAIN})}­ = 0]?10)
; Test if local Intranet call
exten => _.,4,GotoIf($[${SIPDOMAIN} = ${INTRAD}]?10)
;Test if Remote caller belonging to our Internet domain
exten => _.,5,GotoIf($[${SIPDOMAIN} = ${INETD}]?10)
exten => _.,6,GotoIf($[${SIPDOMAIN} = ${INETD}:5060]?10)
; No so, means we are calling someone on an external domain
exten => _.,7,NoOp(@${SIPDOMAIN} is external, forwarding...)
exten => _.,8,Macro(uridial,${EXTEN}@${SIPD­ OMAIN})
exten => _.,9,HangUp()
exten => _.,10,Goto(from-internal,${EXTEN},­ 1)
exten => h,1,HangUp()






; custom-count2four,s,1 can be used as a custom target for
; a Digital Receptionist menu or a Ring Group
[custom-count2four]		
exten => s,1,SayDigits(1234)
exten => s,2,Hangup

; custom-recordme,5678,1 can be used as a custom target for
; a Digital Receptionist menu or a Ring Group
[custom-recordme]
exten => 5678,1,Wait(2)
exten => 5678,2,Record(/tmp/asterisk-recording:gsm)
exten => 5678,3,Wait(2)
exten => 5678,4,Playback(/tmp/asterisk-recording)
exten => 5678,5,Wait(2)
exten => 5678,6,Hangup 

; This macro is for dev purposes and just dumps channel/app variables.  Useful when designing new contexts.
[macro-dumpvars]
exten => s,1,Noop(ACCOUNTCODE=${ACCOUNTCODE})
exten => s,2,Noop(ANSWEREDTIME=${ANSWEREDTIME})
exten => s,3,Noop(BLINDTRANSFER=${BLINDTRANSFER})
exten => s,4,Noop(CALLERID=${CALLERID(all)})
exten => s,5,Noop(CALLERID(name)=${CALLERID(name)})
exten => s,6,Noop(CALLERID(number)=${CALLERID(number)})
exten => s,7,Noop(CALLINGPRES=${CALLINGPRES})
exten => s,8,Noop(CHANNEL=${CHANNEL})
exten => s,9,Noop(CONTEXT=${CONTEXT})
exten => s,10,Noop(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => s,11,Noop(DIALEDPEERNAME=${DIALEDPEERNAME})
exten => s,12,Noop(DIALEDPEERNUMBER=${DIALEDPEERNUMBER})
exten => s,13,Noop(DIALEDTIME=${DIALEDTIME})
exten => s,14,Noop(DIALSTATUS=${DIALSTATUS})
exten => s,15,Noop(DNID=${CALLERID(dnid)})
exten => s,16,Noop(EPOCH=${EPOCH})
exten => s,17,Noop(EXTEN=${EXTEN})
exten => s,18,Noop(HANGUPCAUSE=${HANGUPCAUSE})
exten => s,19,Noop(INVALID_EXTEN=${INVALID_EXTEN})
exten => s,20,Noop(LANGUAGE=${LANGUAGE()})
exten => s,21,Noop(MEETMESECS=${MEETMESECS})
exten => s,22,Noop(PRIORITY=${PRIORITY})
exten => s,23,Noop(RDNIS=${CALLERID(rdnis)}})
exten => s,24,Noop(SIPDOMAIN=${SIPDOMAIN})
exten => s,25,Noop(SIP_CODEC=${SIP_CODEC})
exten => s,26,Noop(SIPCALLID=${SIPCALLID})
exten => s,27,Noop(SIPUSERAGENT=${SIPUSERAGENT})
exten => s,29,Noop(TXTCIDNAME=${TXTCIDNAME})
exten => s,30,Noop(UNIQUEID=${UNIQUEID})
exten => s,31,Noop(TOUCH_MONITOR=${TOUCH_MONITOR})
exten => s,32,Noop(MACRO_CONTEXT=${MACRO_CONTEXT})
exten => s,33,Noop(MACRO_EXTEN=${MACRO_EXTEN})
exten => s,34,Noop(MACRO_PRIORITY=${MACRO_PRIORITY})
