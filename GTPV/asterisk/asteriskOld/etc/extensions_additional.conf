;--------------------------------------------------------------------------------;
; Do NOT edit this file as it is auto-generated by FreePBX. All modifications to ;
; this file must be done via the web gui. There are alternative files to make    ;
; custom modifications, details at: http://freepbx.org/configuration_files       ;
;--------------------------------------------------------------------------------;
;

[globals]
FMDEVSTATE = TRUE
QUEDEVSTATE = TRUE
CFDEVSTATE = TRUE
INTERCOMCODE = nointercom
CALLFILENAME = ""
DIAL_OPTIONS = tr
TRUNK_OPTIONS = 
DIAL_OUT = 9
FAX = 
FAX_RX = system
FAX_RX_EMAIL = noreply@mydomain.tld
FAX_RX_FROM = noreply@mydomain.tld
INCOMING = group-all
NULL = ""
OPERATOR = 
OPERATOR_XTN = 
PARKNOTIFY = SIP/200
RECORDEXTEN = ""
RINGTIMER = 15
DIRECTORY = last
AFTER_INCOMING = 
IN_OVERRIDE = forcereghours
REGTIME = 7:55-17:05
REGDAYS = mon-fri
DIRECTORY_OPTS = 
DIALOUTIDS = 1
RECORDING_STATE = ENABLED
VM_PREFIX = *
VM_OPTS = 
VM_GAIN = 
VM_DDTYPE = u
TIMEFORMAT = kM
TONEZONE = us
ALLOW_SIP_ANON = yes
VMX_CONTEXT = from-internal
VMX_PRI = 1
VMX_TIMEDEST_CONTEXT = 
VMX_TIMEDEST_EXT = dovm
VMX_TIMEDEST_PRI = 1
VMX_LOOPDEST_CONTEXT = 
VMX_LOOPDEST_EXT = dovm
VMX_LOOPDEST_PRI = 1
VMX_OPTS_TIMEOUT = 
VMX_OPTS_LOOP = 
VMX_OPTS_DOVM = 
VMX_TIMEOUT = 2
VMX_REPEAT = 1
VMX_LOOPS = 1
TRANSFER_CONTEXT = from-internal-xfer
MIXMON_FORMAT = wav
MIXMON_DIR = 
MIXMON_POST = 
ASTETCDIR = /etc/asterisk
ASTMODDIR = /usr/lib/asterisk/modules
ASTVARLIBDIR = /var/lib/asterisk
ASTAGIDIR = /var/lib/asterisk/agi-bin
ASTSPOOLDIR = /var/spool/asterisk
ASTRUNDIR = /var/run/asterisk
ASTLOGDIR = /var/log/asterisk
CWINUSEBUSY = true
AMPMGRUSER = admin
AMPMGRPASS = vallcorba
AMPDBENGINE = mysql
AMPDBHOST = localhost
AMPDBNAME = asterisk
AMPDBUSER = freepbx
AMPDBPASS = fpbx
ASTVERSION = 1.6.2.19
ASTCHANDAHDI = 1
OUT_1 = SIP/TELSOME931760210
OUTCID_1 = +34931760210
OUTMAXCHANS_1 = 
OUTFAIL_1 = 
OUTPREFIX_1 = 
OUTDISABLE_1 = off
OUTKEEPCID_1 = off
FORCEDOUTCID_1 = 
OUT_2 = SIP/VOIPBUSTERPRO
OUTCID_2 = +34937161010
OUTMAXCHANS_2 = 
OUTFAIL_2 = 
OUTPREFIX_2 = 
OUTDISABLE_2 = off
OUTKEEPCID_2 = off
FORCEDOUTCID_2 = 
OUT_4 = SIP/12VOIP
OUTCID_4 = +34937161010
OUTMAXCHANS_4 = 
OUTFAIL_4 = 
OUTPREFIX_4 = 
OUTDISABLE_4 = off
OUTKEEPCID_4 = off
FORCEDOUTCID_4 = 
OUT_5 = SIP/TELSOME6868
OUTCID_5 = +34937166868
OUTMAXCHANS_5 = 50
OUTFAIL_5 = 
OUTPREFIX_5 = 
OUTDISABLE_5 = off
OUTKEEPCID_5 = off
FORCEDOUTCID_5 = 
OUT_6 = SIP/TELSOME1010
OUTCID_6 = +34937161010
OUTMAXCHANS_6 = 
OUTFAIL_6 = 
OUTPREFIX_6 = 
OUTDISABLE_6 = off
OUTKEEPCID_6 = off
FORCEDOUTCID_6 = 
#include globals_custom.conf

;end of [globals]

[app-fmf-toggle]
include => app-fmf-toggle-custom
exten => *21,1,Goto(app-fmf-toggle,s,start)
exten => s,1(start),Answer
exten => s,n,Wait(1)
exten => s,n,Macro(user-callerid,)
exten => s,n,GotoIf($["${DB(AMPUSER/${AMPUSER}/followme/ddial)}" = "EXTENSION"]?activate)
exten => s,n,GotoIf($["${DB(AMPUSER/${AMPUSER}/followme/ddial)}" = "DIRECT"]?deactivate:end)
exten => s,n(deactivate),Set(DB(AMPUSER/${AMPUSER}/followme/ddial)=EXTENSION)
exten => s,n,Set(STATE=NOT_INUSE)
exten => s,n,Gosub(app-fmf-toggle,sstate,1)
exten => s,n(hook_off),Playback(followme&de-activated)
exten => s,n(end),Macro(hangupcall,)
exten => s,n(activate),Set(DB(AMPUSER/${AMPUSER}/followme/ddial)=DIRECT)
exten => s,n,Set(STATE=INUSE)
exten => s,n,Gosub(app-fmf-toggle,sstate,1)
exten => s,n(hook_on),Playback(followme&activated)
exten => s,n,Macro(hangupcall,)
exten => sstate,1,Set(DEVICES=${DB(AMPUSER/${AMPUSER}/device)})
exten => sstate,n,GotoIf($["${DEVICES}" = "" ]?return)
exten => sstate,n,Set(LOOPCNT=${FIELDQTY(DEVICES,&)})
exten => sstate,n,Set(ITER=1)
exten => sstate,n(begin),Set(DEVICE_STATE(Custom:FOLLOWME${CUT(DEVICES,&,${ITER})})=${STATE})
exten => sstate,n,Set(ITER=$[${ITER} + 1])
exten => sstate,n,GotoIf($[${ITER} <= ${LOOPCNT}]?begin)
exten => sstate,n(return),Return()

; end of [app-fmf-toggle]


[ext-findmefollow]
include => ext-findmefollow-custom
exten => *21100,1,Goto(app-fmf-toggle,*21,1)
exten => *21100,hint,Custom:FOLLOWME100
exten => *21101,1,Goto(app-fmf-toggle,*21,1)
exten => *21101,hint,Custom:FOLLOWME101
exten => *21102,1,Goto(app-fmf-toggle,*21,1)
exten => *21102,hint,Custom:FOLLOWME102
exten => *21103,1,Goto(app-fmf-toggle,*21,1)
exten => *21103,hint,Custom:FOLLOWME103
exten => *21200,1,Goto(app-fmf-toggle,*21,1)
exten => *21200,hint,Custom:FOLLOWME200
exten => *21201,1,Goto(app-fmf-toggle,*21,1)
exten => *21201,hint,Custom:FOLLOWME201
exten => *21222,1,Goto(app-fmf-toggle,*21,1)
exten => *21222,hint,Custom:FOLLOWME222
exten => *21301,1,Goto(app-fmf-toggle,*21,1)
exten => *21301,hint,Custom:FOLLOWME301
exten => *21302,1,Goto(app-fmf-toggle,*21,1)
exten => *21302,hint,Custom:FOLLOWME302
exten => *21303,1,Goto(app-fmf-toggle,*21,1)
exten => *21303,hint,Custom:FOLLOWME303
exten => *21304,1,Goto(app-fmf-toggle,*21,1)
exten => *21304,hint,Custom:FOLLOWME304
exten => *21305,1,Goto(app-fmf-toggle,*21,1)
exten => *21305,hint,Custom:FOLLOWME305
exten => *21306,1,Goto(app-fmf-toggle,*21,1)
exten => *21306,hint,Custom:FOLLOWME306
exten => *21333,1,Goto(app-fmf-toggle,*21,1)
exten => *21333,hint,Custom:FOLLOWME333
exten => *21341,1,Goto(app-fmf-toggle,*21,1)
exten => *21341,hint,Custom:FOLLOWME341
exten => *21342,1,Goto(app-fmf-toggle,*21,1)
exten => *21342,hint,Custom:FOLLOWME342
exten => *21343,1,Goto(app-fmf-toggle,*21,1)
exten => *21343,hint,Custom:FOLLOWME343
exten => *21344,1,Goto(app-fmf-toggle,*21,1)
exten => *21344,hint,Custom:FOLLOWME344
exten => *21345,1,Goto(app-fmf-toggle,*21,1)
exten => *21345,hint,Custom:FOLLOWME345
exten => *21346,1,Goto(app-fmf-toggle,*21,1)
exten => *21346,hint,Custom:FOLLOWME346
exten => *21347,1,Goto(app-fmf-toggle,*21,1)
exten => *21347,hint,Custom:FOLLOWME347
exten => *21348,1,Goto(app-fmf-toggle,*21,1)
exten => *21348,hint,Custom:FOLLOWME348
exten => *21349,1,Goto(app-fmf-toggle,*21,1)
exten => *21349,hint,Custom:FOLLOWME349
exten => *21350,1,Goto(app-fmf-toggle,*21,1)
exten => *21350,hint,Custom:FOLLOWME350
exten => *21444,1,Goto(app-fmf-toggle,*21,1)
exten => *21444,hint,Custom:FOLLOWME444
exten => *21500,1,Goto(app-fmf-toggle,*21,1)
exten => *21500,hint,Custom:FOLLOWME500
exten => *21501,1,Goto(app-fmf-toggle,*21,1)
exten => *21501,hint,Custom:FOLLOWME501
exten => *21502,1,Goto(app-fmf-toggle,*21,1)
exten => *21502,hint,Custom:FOLLOWME502
exten => *21503,1,Goto(app-fmf-toggle,*21,1)
exten => *21503,hint,Custom:FOLLOWME503
exten => *21504,1,Goto(app-fmf-toggle,*21,1)
exten => *21504,hint,Custom:FOLLOWME504
exten => FM306,1,Goto(306,FM306)
exten => 306,1,GotoIf($[ "${DB(AMPUSER/306/followme/ddial)}" = "EXTENSION" ]?ext-local,306,1)
exten => 306,n(FM306),Macro(user-callerid,)
exten => 306,n,GotoIf($["foo${BLKVM_OVERRIDE}" = "foo"]?skipdb)
exten => 306,n,GotoIf($["${DB(${BLKVM_OVERRIDE})}" = "TRUE"]?skipov)
exten => 306,n(skipdb),Set(__NODEST=)
exten => 306,n,Set(__BLKVM_OVERRIDE=BLKVM/${EXTEN}/${CHANNEL})
exten => 306,n,Set(__BLKVM_BASE=${EXTEN})
exten => 306,n,Set(DB(${BLKVM_OVERRIDE})=TRUE)
exten => 306,n(skipov),Set(RRNODEST=${NODEST})
exten => 306,n(skipvmblk),Set(__NODEST=${EXTEN})
exten => 306,n,GosubIf($[${DB_EXISTS(AMPUSER/306/followme/changecid)} = 1 & "${DB(AMPUSER/306/followme/changecid)}" != "default" & "${DB(AMPUSER/306/followme/changecid)}" != ""]?sub-fmsetcid,s,1)
exten => 306,n,Set(RecordMethod=Group)
exten => 306,n,Macro(record-enable,${DB(AMPUSER/306/followme/grplist)},${RecordMethod})
exten => 306,n(skipsimple),Set(RingGroupMethod=ringallv2)
exten => 306,n,Set(_FMGRP=306)
exten => 306,n(DIALGRP),GotoIf($[ "${DB(AMPUSER/306/followme/grpconf)}" = "ENABLED" ]?doconfirm)
exten => 306,n,Macro(dial,$[ ${DB(AMPUSER/306/followme/grptime)} + ${DB(AMPUSER/306/followme/prering)} ],${DIAL_OPTIONS},${DB(AMPUSER/306/followme/grplist)})
exten => 306,n,Goto(nextstep)
exten => 306,n(doconfirm),Macro(dial-confirm,$[ ${DB(AMPUSER/306/followme/grptime)} + ${DB(AMPUSER/306/followme/prering)} ],${DIAL_OPTIONS},${DB(AMPUSER/306/followme/grplist)},306)
exten => 306,n(nextstep),Set(RingGroupMethod=)
exten => 306,n,GotoIf($["foo${RRNODEST}" != "foo"]?nodest)
exten => 306,n,Set(__NODEST=)
exten => 306,n,Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})
exten => 306,n,Goto(app-blackhole,hangup,1)
exten => 306,n(nodest),Noop(SKIPPING DEST, CALL CAME FROM Q/RG: ${RRNODEST})

; end of [ext-findmefollow]


[fmgrps]
include => fmgrps-custom
exten => _RG-306-.,1,Macro(dial,${DB(AMPUSER/306/followme/grptime)},M(confirm^^^306)${DIAL_OPTIONS},${EXTEN:7})

; end of [fmgrps]


[sub-fmsetcid]
include => sub-fmsetcid-custom
exten => s,1,Goto(s-${DB(AMPUSER/${BLKVM_BASE}/followme/changecid)},1)
exten => s-fixed,1,ExecIf($["${REGEX("^[\+]?[0-9]+$" ${DB(AMPUSER/${BLKVM_BASE}/followme/fixedcid)})}" = "1"]?Set(__TRUNKCIDOVERRIDE=${DB(AMPUSER/${BLKVM_BASE}/followme/fixedcid)}))
exten => s-fixed,n,Return()
exten => s-extern,1,ExecIf($["${REGEX("^[\+]?[0-9]+$" ${DB(AMPUSER/${BLKVM_BASE}/followme/fixedcid)})}" == "1" & "${FROM_DID}" != ""]?Set(__TRUNKCIDOVERRIDE=${DB(AMPUSER/${BLKVM_BASE}/followme/fixedcid)}))
exten => s-extern,n,Return()
exten => s-did,1,ExecIf($["${REGEX("^[\+]?[0-9]+$" ${FROM_DID})}" = "1"]?Set(__REALCALLERIDNUM=${FROM_DID}))
exten => s-did,n,Return()
exten => s-forcedid,1,ExecIf($["${REGEX("^[\+]?[0-9]+$" ${FROM_DID})}" = "1"]?Set(__TRUNKCIDOVERRIDE=${FROM_DID}))
exten => s-forcedid,n,Return()
exten => _s-.,1,Noop(Unknown value for AMPUSER/${BLKVM_BASE}/followme/changecid of ${DB(AMPUSER/${BLKVM_BASE}/followme/changecid)} set to "default")
exten => _s-.,n,Set(DB(AMPUSER/${BLKVM_BASE}/followme/changecid)=default)
exten => _s-.,n,Return()

; end of [sub-fmsetcid]


[app-callwaiting-cwoff]
include => app-callwaiting-cwoff-custom
exten => *71,1,Answer
exten => *71,n,Wait(1)
exten => *71,n,Macro(user-callerid,)
exten => *71,n,Noop(Deleting: CW/${AMPUSER} ${DB_DELETE(CW/${AMPUSER})})
exten => *71,n(hook_1),Playback(call-waiting&de-activated)
exten => *71,n,Macro(hangupcall,)

; end of [app-callwaiting-cwoff]


[app-callwaiting-cwon]
include => app-callwaiting-cwon-custom
exten => *70,1,Answer
exten => *70,n,Wait(1)
exten => *70,n,Macro(user-callerid,)
exten => *70,n,Set(DB(CW/${AMPUSER})=ENABLED)
exten => *70,n(hook_1),Playback(call-waiting&activated)
exten => *70,n,Macro(hangupcall,)

; end of [app-callwaiting-cwon]


[ext-miscdests]
include => ext-miscdests-custom
exten => 3,1,Noop(MiscDest: Movil Jordi Bosch)
exten => 3,n,Goto(from-internal,627582130,1)
exten => 1,1,Noop(MiscDest: Movil Jorge Sixto)
exten => 1,n,Goto(from-internal,657284315,1)
exten => 2,1,Noop(MiscDest: Movil personal jroge)
exten => 2,n,Goto(from-internal,607456696,1)
exten => 4,1,Noop(MiscDest: Movil SRGI)
exten => 4,n,Goto(from-internal,610724948,1)

; end of [ext-miscdests]


[app-queue-toggle]
include => app-queue-toggle-custom
exten => s,1(start),Answer
exten => s,n,Wait(1)
exten => s,n,Macro(user-callerid,)
exten => s,n,Set(QUEUESTAT=LOGGEDOUT)
exten => s,n,AGI(queue_devstate.agi,getqueues,${AMPUSER})
exten => s,n,GotoIf($["${QUEUESTAT}" = "LOGGEDOUT"]?activate)
exten => s,n,GotoIf($["${QUEUESTAT}" = "LOGGEDIN"]?deactivate)
exten => s,n,GotoIf($["${QUEUESTAT}" = "STATIC"]?static:end)
exten => s,n(deactivate),Noop(Agent Logged out)
exten => s,n,Macro(toggle-del-agent,)
exten => s,n,Set(STATE=NOT_INUSE)
exten => s,n,Gosub(sstate,1)
exten => s,n,Playback(agent-loggedoff)
exten => s,n,Macro(hangupcall,)
exten => s,n(activate),Noop(Agent Logged In)
exten => s,n,Macro(toggle-add-agent,)
exten => s,n,Set(STATE=INUSE)
exten => s,n,Gosub(sstate,1)
exten => s,n,Playback(agent-loginok)
exten => s,n,SayDigits(${CALLBACKNUM})
exten => s,n,Macro(hangupcall,)
exten => s,n(static),Noop(User is a Static Agent)
exten => s,n,Set(STATE=INUSE)
exten => s,n,Gosub(sstate,1)
exten => s,n,Playback(agent-loginok)
exten => s,n,Macro(hangupcall,)
exten => sstate,1,Set(DEVICES=${DB(AMPUSER/${AMPUSER}/device)})
exten => sstate,n,GotoIf($["${DEVICES}" = "" ]?return)
exten => sstate,n,Set(LOOPCNT=${FIELDQTY(DEVICES,&)})
exten => sstate,n,Set(ITER=1)
exten => sstate,n(begin),Set(DEVICE_STATE(Custom:QUEUE${CUT(DEVICES,&,${ITER})}*${QUEUENO})=${STATE})
exten => sstate,n,Set(ITER=$[${ITER} + 1])
exten => sstate,n,GotoIf($[${ITER} <= ${LOOPCNT}]?begin)
exten => sstate,n(return),Return()

; end of [app-queue-toggle]


[macro-toggle-del-agent]
include => macro-toggle-del-agent-custom
exten => s,1,Wait(1)
exten => s,n,Macro(user-callerid,SKIPTTL,)
exten => s,n,Set(CALLBACKNUM=${AMPUSER})
exten => s,n,RemoveQueueMember(${QUEUENO},Local/${CALLBACKNUM}@from-queue/n)
exten => s,n,RemoveQueueMember(${QUEUENO},Local/${CALLBACKNUM}@from-internal/n)
exten => s,n,UserEvent(RefreshQueue)
exten => s,n,MacroExit()

; end of [macro-toggle-del-agent]


[macro-toggle-add-agent]
include => macro-toggle-add-agent-custom
exten => s,1,Wait(1)
exten => s,n,Macro(user-callerid,SKIPTTL,)
exten => s,n,Set(CALLBACKNUM=${AMPUSER})
exten => s,n,GotoIf($["${DB(QPENALTY/${QUEUENO}/dynmemberonly)}" = "yes" & ${DB_EXISTS(QPENALTY/${QUEUENO}/agents/${CALLBACKNUM})} != 1]?invalid)
exten => s,n,AddQueueMember(${QUEUENO},Local/${CALLBACKNUM}@from-queue/n,${DB(QPENALTY/${QUEUENO}/agents/${CALLBACKNUM})})
exten => s,n,UserEvent(AgentLogin,Agent: ${CALLBACKNUM})
exten => s,n,MacroExit()
exten => s,n(invalid),Playback(pbx-invalid)
exten => s,n,MacroExit()

; end of [macro-toggle-add-agent]


[ext-queues]
include => ext-queues-custom
exten => 123,1,Macro(user-callerid,)
exten => 123,n,Answer
exten => 123,n,Set(__BLKVM_OVERRIDE=BLKVM/${EXTEN}/${CHANNEL})
exten => 123,n,Set(__BLKVM_BASE=${EXTEN})
exten => 123,n,Set(DB(${BLKVM_OVERRIDE})=TRUE)
exten => 123,n,ExecIf($["${REGEX("(M[(]auto-blkvm[)])" ${DIAL_OPTIONS})}" != "1"]?Set(_DIAL_OPTIONS=${DIAL_OPTIONS}M(auto-blkvm)))
exten => 123,n,Set(__NODEST=${EXTEN})
exten => 123,n,Set(MONITOR_FILENAME=/var/spool/asterisk/monitor/q${EXTEN}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${UNIQUEID})
exten => 123,n,Playback(custom/Bienvenido_Espere)
exten => 123,n,Set(__MOHCLASS=test)
exten => 123,n,Queue(123,t,,,300)
exten => 123,n,Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})
exten => 123,n,Set(__NODEST=)
exten => 123,n,Goto(app-announcement-1,s,1)
exten => 123*,1,Macro(agent-add,123,)
exten => 123**,1,Macro(agent-del,123)
exten => *45123,1,Set(QUEUENO=123)
exten => *45123,n,Goto(app-queue-toggle,s,start)
exten => *45100*123,1,Set(QUEUENO=123)
exten => *45100*123,n,Goto(app-queue-toggle,s,start)
exten => *45100*123,hint,Custom:QUEUE100*123
exten => *45101*123,1,Set(QUEUENO=123)
exten => *45101*123,n,Goto(app-queue-toggle,s,start)
exten => *45101*123,hint,Custom:QUEUE101*123
exten => *45102*123,1,Set(QUEUENO=123)
exten => *45102*123,n,Goto(app-queue-toggle,s,start)
exten => *45102*123,hint,Custom:QUEUE102*123
exten => *45103*123,1,Set(QUEUENO=123)
exten => *45103*123,n,Goto(app-queue-toggle,s,start)
exten => *45103*123,hint,Custom:QUEUE103*123
exten => *45200*123,1,Set(QUEUENO=123)
exten => *45200*123,n,Goto(app-queue-toggle,s,start)
exten => *45200*123,hint,Custom:QUEUE200*123
exten => *45201*123,1,Set(QUEUENO=123)
exten => *45201*123,n,Goto(app-queue-toggle,s,start)
exten => *45201*123,hint,Custom:QUEUE201*123
exten => *45222*123,1,Set(QUEUENO=123)
exten => *45222*123,n,Goto(app-queue-toggle,s,start)
exten => *45222*123,hint,Custom:QUEUE222*123
exten => *45301*123,1,Set(QUEUENO=123)
exten => *45301*123,n,Goto(app-queue-toggle,s,start)
exten => *45301*123,hint,Custom:QUEUE301*123
exten => *45302*123,1,Set(QUEUENO=123)
exten => *45302*123,n,Goto(app-queue-toggle,s,start)
exten => *45302*123,hint,Custom:QUEUE302*123
exten => *45303*123,1,Set(QUEUENO=123)
exten => *45303*123,n,Goto(app-queue-toggle,s,start)
exten => *45303*123,hint,Custom:QUEUE303*123
exten => *45304*123,1,Set(QUEUENO=123)
exten => *45304*123,n,Goto(app-queue-toggle,s,start)
exten => *45304*123,hint,Custom:QUEUE304*123
exten => *45305*123,1,Set(QUEUENO=123)
exten => *45305*123,n,Goto(app-queue-toggle,s,start)
exten => *45305*123,hint,Custom:QUEUE305*123
exten => *45306*123,1,Set(QUEUENO=123)
exten => *45306*123,n,Goto(app-queue-toggle,s,start)
exten => *45306*123,hint,Custom:QUEUE306*123
exten => *45333*123,1,Set(QUEUENO=123)
exten => *45333*123,n,Goto(app-queue-toggle,s,start)
exten => *45333*123,hint,Custom:QUEUE333*123
exten => *45341*123,1,Set(QUEUENO=123)
exten => *45341*123,n,Goto(app-queue-toggle,s,start)
exten => *45341*123,hint,Custom:QUEUE341*123
exten => *45342*123,1,Set(QUEUENO=123)
exten => *45342*123,n,Goto(app-queue-toggle,s,start)
exten => *45342*123,hint,Custom:QUEUE342*123
exten => *45343*123,1,Set(QUEUENO=123)
exten => *45343*123,n,Goto(app-queue-toggle,s,start)
exten => *45343*123,hint,Custom:QUEUE343*123
exten => *45344*123,1,Set(QUEUENO=123)
exten => *45344*123,n,Goto(app-queue-toggle,s,start)
exten => *45344*123,hint,Custom:QUEUE344*123
exten => *45345*123,1,Set(QUEUENO=123)
exten => *45345*123,n,Goto(app-queue-toggle,s,start)
exten => *45345*123,hint,Custom:QUEUE345*123
exten => *45346*123,1,Set(QUEUENO=123)
exten => *45346*123,n,Goto(app-queue-toggle,s,start)
exten => *45346*123,hint,Custom:QUEUE346*123
exten => *45347*123,1,Set(QUEUENO=123)
exten => *45347*123,n,Goto(app-queue-toggle,s,start)
exten => *45347*123,hint,Custom:QUEUE347*123
exten => *45348*123,1,Set(QUEUENO=123)
exten => *45348*123,n,Goto(app-queue-toggle,s,start)
exten => *45348*123,hint,Custom:QUEUE348*123
exten => *45349*123,1,Set(QUEUENO=123)
exten => *45349*123,n,Goto(app-queue-toggle,s,start)
exten => *45349*123,hint,Custom:QUEUE349*123
exten => *45350*123,1,Set(QUEUENO=123)
exten => *45350*123,n,Goto(app-queue-toggle,s,start)
exten => *45350*123,hint,Custom:QUEUE350*123
exten => *45444*123,1,Set(QUEUENO=123)
exten => *45444*123,n,Goto(app-queue-toggle,s,start)
exten => *45444*123,hint,Custom:QUEUE444*123
exten => *45500*123,1,Set(QUEUENO=123)
exten => *45500*123,n,Goto(app-queue-toggle,s,start)
exten => *45500*123,hint,Custom:QUEUE500*123
exten => *45501*123,1,Set(QUEUENO=123)
exten => *45501*123,n,Goto(app-queue-toggle,s,start)
exten => *45501*123,hint,Custom:QUEUE501*123
exten => *45502*123,1,Set(QUEUENO=123)
exten => *45502*123,n,Goto(app-queue-toggle,s,start)
exten => *45502*123,hint,Custom:QUEUE502*123
exten => *45503*123,1,Set(QUEUENO=123)
exten => *45503*123,n,Goto(app-queue-toggle,s,start)
exten => *45503*123,hint,Custom:QUEUE503*123
exten => *45504*123,1,Set(QUEUENO=123)
exten => *45504*123,n,Goto(app-queue-toggle,s,start)
exten => *45504*123,hint,Custom:QUEUE504*123
exten => h,1,Macro(hangupcall,)

; end of [ext-queues]


[from-queue]
include => from-queue-custom
exten => 123,1,Goto(from-internal,${QAGENT},1)
exten => _.,1,Set(QAGENT=${EXTEN})
exten => _.,n,Goto(${NODEST},1)

; end of [from-queue]


[from-queue-exten-internal]
include => from-queue-exten-internal-custom
include => from-queue-exten-only
include => from-internal
exten => foo,1,Noop(bar)

; end of [from-queue-exten-internal]


[from-queue-exten-only]
include => from-queue-exten-only-custom
exten => 100,1,Set(RingGroupMethod=none)
exten => 100,n,Macro(record-enable,100,IN)
exten => 100,n,Macro(dial,,${DIAL_OPTIONS},100)
exten => 100,n,Hangup
exten => 101,1,Set(RingGroupMethod=none)
exten => 101,n,Macro(record-enable,101,IN)
exten => 101,n,Macro(dial,,${DIAL_OPTIONS},101)
exten => 101,n,Hangup
exten => 102,1,Set(RingGroupMethod=none)
exten => 102,n,Macro(record-enable,102,IN)
exten => 102,n,Macro(dial,,${DIAL_OPTIONS},102)
exten => 102,n,Hangup
exten => 103,1,Set(RingGroupMethod=none)
exten => 103,n,Macro(record-enable,103,IN)
exten => 103,n,Macro(dial,,${DIAL_OPTIONS},103)
exten => 103,n,Hangup
exten => 200,1,Set(RingGroupMethod=none)
exten => 200,n,Macro(record-enable,200,IN)
exten => 200,n,Macro(dial,,${DIAL_OPTIONS},200)
exten => 200,n,Hangup
exten => 201,1,Set(RingGroupMethod=none)
exten => 201,n,Macro(record-enable,201,IN)
exten => 201,n,Macro(dial,,${DIAL_OPTIONS},201)
exten => 201,n,Hangup
exten => 222,1,Set(RingGroupMethod=none)
exten => 222,n,Macro(record-enable,222,IN)
exten => 222,n,Macro(dial,,${DIAL_OPTIONS},222)
exten => 222,n,Hangup
exten => 301,1,Set(RingGroupMethod=none)
exten => 301,n,Macro(record-enable,301,IN)
exten => 301,n,Macro(dial,,${DIAL_OPTIONS},301)
exten => 301,n,Hangup
exten => 302,1,Set(RingGroupMethod=none)
exten => 302,n,Macro(record-enable,302,IN)
exten => 302,n,Macro(dial,,${DIAL_OPTIONS},302)
exten => 302,n,Hangup
exten => 303,1,Set(RingGroupMethod=none)
exten => 303,n,Macro(record-enable,303,IN)
exten => 303,n,Macro(dial,,${DIAL_OPTIONS},303)
exten => 303,n,Hangup
exten => 304,1,Set(RingGroupMethod=none)
exten => 304,n,Macro(record-enable,304,IN)
exten => 304,n,Macro(dial,,${DIAL_OPTIONS},304)
exten => 304,n,Hangup
exten => 305,1,Set(RingGroupMethod=none)
exten => 305,n,Macro(record-enable,305,IN)
exten => 305,n,Macro(dial,,${DIAL_OPTIONS},305)
exten => 305,n,Hangup
exten => 306,1,Set(RingGroupMethod=none)
exten => 306,n,Macro(record-enable,306,IN)
exten => 306,n,Macro(dial,,${DIAL_OPTIONS},306)
exten => 306,n,Hangup
exten => 333,1,Set(RingGroupMethod=none)
exten => 333,n,Macro(record-enable,333,IN)
exten => 333,n,Macro(dial,,${DIAL_OPTIONS},333)
exten => 333,n,Hangup
exten => 341,1,Set(RingGroupMethod=none)
exten => 341,n,Macro(record-enable,341,IN)
exten => 341,n,Macro(dial,,${DIAL_OPTIONS},341)
exten => 341,n,Hangup
exten => 342,1,Set(RingGroupMethod=none)
exten => 342,n,Macro(record-enable,342,IN)
exten => 342,n,Macro(dial,,${DIAL_OPTIONS},342)
exten => 342,n,Hangup
exten => 343,1,Set(RingGroupMethod=none)
exten => 343,n,Macro(record-enable,343,IN)
exten => 343,n,Macro(dial,,${DIAL_OPTIONS},343)
exten => 343,n,Hangup
exten => 344,1,Set(RingGroupMethod=none)
exten => 344,n,Macro(record-enable,344,IN)
exten => 344,n,Macro(dial,,${DIAL_OPTIONS},344)
exten => 344,n,Hangup
exten => 345,1,Set(RingGroupMethod=none)
exten => 345,n,Macro(record-enable,345,IN)
exten => 345,n,Macro(dial,,${DIAL_OPTIONS},345)
exten => 345,n,Hangup
exten => 346,1,Set(RingGroupMethod=none)
exten => 346,n,Macro(record-enable,346,IN)
exten => 346,n,Macro(dial,,${DIAL_OPTIONS},346)
exten => 346,n,Hangup
exten => 347,1,Set(RingGroupMethod=none)
exten => 347,n,Macro(record-enable,347,IN)
exten => 347,n,Macro(dial,,${DIAL_OPTIONS},347)
exten => 347,n,Hangup
exten => 348,1,Set(RingGroupMethod=none)
exten => 348,n,Macro(record-enable,348,IN)
exten => 348,n,Macro(dial,,${DIAL_OPTIONS},348)
exten => 348,n,Hangup
exten => 349,1,Set(RingGroupMethod=none)
exten => 349,n,Macro(record-enable,349,IN)
exten => 349,n,Macro(dial,,${DIAL_OPTIONS},349)
exten => 349,n,Hangup
exten => 350,1,Set(RingGroupMethod=none)
exten => 350,n,Macro(record-enable,350,IN)
exten => 350,n,Macro(dial,,${DIAL_OPTIONS},350)
exten => 350,n,Hangup
exten => 444,1,Set(RingGroupMethod=none)
exten => 444,n,Macro(record-enable,444,IN)
exten => 444,n,Macro(dial,,${DIAL_OPTIONS},444)
exten => 444,n,Hangup
exten => 500,1,Set(RingGroupMethod=none)
exten => 500,n,Macro(record-enable,500,IN)
exten => 500,n,Macro(dial,,${DIAL_OPTIONS},500)
exten => 500,n,Hangup
exten => 501,1,Set(RingGroupMethod=none)
exten => 501,n,Macro(record-enable,501,IN)
exten => 501,n,Macro(dial,,${DIAL_OPTIONS},501)
exten => 501,n,Hangup
exten => 502,1,Set(RingGroupMethod=none)
exten => 502,n,Macro(record-enable,502,IN)
exten => 502,n,Macro(dial,,${DIAL_OPTIONS},502)
exten => 502,n,Hangup
exten => 503,1,Set(RingGroupMethod=none)
exten => 503,n,Macro(record-enable,503,IN)
exten => 503,n,Macro(dial,,${DIAL_OPTIONS},503)
exten => 503,n,Hangup
exten => 504,1,Set(RingGroupMethod=none)
exten => 504,n,Macro(record-enable,504,IN)
exten => 504,n,Macro(dial,,${DIAL_OPTIONS},504)
exten => 504,n,Hangup
exten => h,1,Macro(hangupcall,)

; end of [from-queue-exten-only]


[macro-agent-add]
include => macro-agent-add-custom
exten => s,1,Wait(1)
exten => s,n,Macro(user-callerid,SKIPTTL)
exten => s,n(a3),Read(CALLBACKNUM,agent-login,,,,)
exten => s,n,GotoIf($["${CALLBACKNUM}" != ""]?a7)
exten => s,n(a5),Set(CALLBACKNUM=${AMPUSER})
exten => s,n,ExecIf($["${CALLBACKNUM}" = ""]?Set(CALLBACKNUM=${CALLERID(number)}))
exten => s,n,GotoIf($["${CALLBACKNUM}" = ""]?a3)
exten => s,n(a7),GotoIf($["${CALLBACKNUM}" = "${ARG1}"]?invalid)
exten => s,n,GotoIf($["${ARG3}" = "EXTEN" & ${DB_EXISTS(AMPUSER/${CALLBACKNUM}/cidname)} = 0]?invalid)
exten => s,n,GotoIf($["${DB(QPENALTY/${ARG1}/dynmemberonly)}" = "yes" & ${DB_EXISTS(QPENALTY/${ARG1}/agents/${CALLBACKNUM})} != 1]?invalid)
exten => s,n,ExecIf($["${QREGEX}" != ""]?GotoIf($["${REGEX("${QREGEX}" ${CALLBACKNUM})}" = "0"]?invalid))
exten => s,n,ExecIf($["${ARG2}" != ""]?Authenticate(${ARG2}))
exten => s,n(a9),AddQueueMember(${ARG1},Local/${CALLBACKNUM}@from-queue/n,${DB(QPENALTY/${ARG1}/agents/${CALLBACKNUM})})
exten => s,n,UserEvent(Agentlogin,Agent: ${CALLBACKNUM})
exten => s,n,Wait(1)
exten => s,n,Playback(agent-loginok&with&extension)
exten => s,n,SayDigits(${CALLBACKNUM})
exten => s,n,Hangup
exten => s,n,MacroExit()
exten => s,n(invalid),Playback(pbx-invalid)
exten => s,n,Goto(a3)

; end of [macro-agent-add]


[macro-agent-del]
include => macro-agent-del-custom
exten => s,1,Wait(1)
exten => s,n,Macro(user-callerid,SKIPTTL)
exten => s,n(a3),Read(CALLBACKNUM,agent-logoff,,,,)
exten => s,n,GotoIf($["${CALLBACKNUM}" = ""]?a5:a7)
exten => s,n(a5),Set(CALLBACKNUM=${AMPUSER})
exten => s,n,ExecIf($["${CALLBACKNUM}" = ""]?Set(CALLBACKNUM=${CALLERID(number)}))
exten => s,n,GotoIf($["${CALLBACKNUM}" = ""]?a3)
exten => s,n(a7),RemoveQueueMember(${ARG1},Local/${CALLBACKNUM}@from-queue/n)
exten => s,n,RemoveQueueMember(${ARG1},Local/${CALLBACKNUM}@from-internal/n)
exten => s,n,UserEvent(RefreshQueue)
exten => s,n,Wait(1)
exten => s,n,Playback(agent-loggedoff)
exten => s,n,Hangup

; end of [macro-agent-del]


[ivr-2]
include => ivr-2-custom
exten => h,1,Hangup
exten => s,1,Set(MSG=custom/Bienvenido_Espere)
exten => s,n,Set(LOOPCOUNT=0)
exten => s,n,Set(__DIR-CONTEXT=default)
exten => s,n,Set(_IVR_CONTEXT_${CONTEXT}=${IVR_CONTEXT})
exten => s,n,Set(_IVR_CONTEXT=${CONTEXT})
exten => s,n,GotoIf($["${CDR(disposition)}" = "ANSWERED"]?begin)
exten => s,n,Answer
exten => s,n,Wait(1)
exten => s,n(begin),Set(TIMEOUT(digit)=3)
exten => s,n,Set(TIMEOUT(response)=10)
exten => s,n,Set(__IVR_RETVM=)
exten => s,n,ExecIf($["${MSG}" != ""]?Background(${MSG}))
exten => s,n,WaitExten(,)
exten => hang,1,Playback(vm-goodbye)
exten => hang,n,Hangup
exten => 1,1,Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})
exten => 1,n,Set(__NODEST=)
exten => 1,n,Goto(ext-local,vmb303,1)
exten => t,1,Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})
exten => t,n,Set(__NODEST=)
exten => t,n,Goto(ext-local,vmb303,1)
exten => i,1,Playback(invalid)
exten => i,n,Goto(loop,1)
exten => loop,1,Set(LOOPCOUNT=$[${LOOPCOUNT} + 1])
exten => loop,n,GotoIf($[${LOOPCOUNT} > 2]?hang,1)
exten => loop,n,Goto(ivr-2,s,begin)
exten => return,1,Set(MSG=custom/Bienvenido_Espere)
exten => return,n,Set(_IVR_CONTEXT=${CONTEXT})
exten => return,n,Set(_IVR_CONTEXT_${CONTEXT}=${IVR_CONTEXT_${CONTEXT}})
exten => return,n,Goto(ivr-2,s,begin)

; end of [ivr-2]


[ivr-3]
include => ivr-3-custom
exten => h,1,Hangup
exten => s,1,Set(MSG=custom/Trazavoice)
exten => s,n,Set(LOOPCOUNT=0)
exten => s,n,Set(__DIR-CONTEXT=default)
exten => s,n,Set(_IVR_CONTEXT_${CONTEXT}=${IVR_CONTEXT})
exten => s,n,Set(_IVR_CONTEXT=${CONTEXT})
exten => s,n,GotoIf($["${CDR(disposition)}" = "ANSWERED"]?begin)
exten => s,n,Answer
exten => s,n,Wait(1)
exten => s,n(begin),Set(TIMEOUT(digit)=3)
exten => s,n,Set(TIMEOUT(response)=5)
exten => s,n,Set(__IVR_RETVM=)
exten => s,n,ExecIf($["${MSG}" != ""]?Background(${MSG}))
exten => s,n,WaitExten(,)
exten => hang,1,Playback(vm-goodbye)
exten => hang,n,Hangup
exten => 1,1,Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})
exten => 1,n,Set(__NODEST=)
exten => 1,n,Goto(from-did-direct,333,1)
exten => 2,1,Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})
exten => 2,n,Set(__NODEST=)
exten => 2,n,Goto(from-did-direct,444,1)
exten => t,1,Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})
exten => t,n,Set(__NODEST=)
exten => t,n,Goto(timeconditions,1,1)
exten => i,1,Playback(invalid)
exten => i,n,Goto(loop,1)
exten => loop,1,Set(LOOPCOUNT=$[${LOOPCOUNT} + 1])
exten => loop,n,GotoIf($[${LOOPCOUNT} > 3]?hang,1)
exten => loop,n,Goto(ivr-3,s,begin)
exten => return,1,Set(MSG=custom/Trazavoice)
exten => return,n,Set(_IVR_CONTEXT=${CONTEXT})
exten => return,n,Set(_IVR_CONTEXT_${CONTEXT}=${IVR_CONTEXT_${CONTEXT}})
exten => return,n,Goto(ivr-3,s,begin)

; end of [ivr-3]


[app-pbdirectory]
include => app-pbdirectory-custom
exten => 411,1,Goto(pbdirectory,1)
exten => pbdirectory,1,Answer
exten => pbdirectory,n,Wait(1)
exten => pbdirectory,n,Macro(user-callerid,)
exten => pbdirectory,n,AGI(pbdirectory)
exten => pbdirectory,n,GotoIf($["${dialnumber}"=""]?hangup,1)
exten => pbdirectory,n,Noop(Got number to dial: ${dialnumber})
exten => pbdirectory,n,Dial(Local/${dialnumber}@from-internal/n,)
exten => hangup,1,Hangup

; end of [app-pbdirectory]


[ext-group]
include => ext-group-custom
exten => 600,1,Macro(user-callerid,)
exten => 600,n,GotoIf($["foo${BLKVM_OVERRIDE}" = "foo"]?skipdb)
exten => 600,n,GotoIf($["${DB(${BLKVM_OVERRIDE})}" = "TRUE"]?skipov)
exten => 600,n(skipdb),Set(__NODEST=)
exten => 600,n,Set(__BLKVM_OVERRIDE=BLKVM/${EXTEN}/${CHANNEL})
exten => 600,n,Set(__BLKVM_BASE=${EXTEN})
exten => 600,n,Set(DB(${BLKVM_OVERRIDE})=TRUE)
exten => 600,n(skipov),Set(RRNODEST=${NODEST})
exten => 600,n(skipvmblk),Set(__NODEST=${EXTEN})
exten => 600,n,GosubIf($[${DB_EXISTS(RINGGROUP/600/changecid)} = 1 & "${DB(RINGGROUP/600/changecid)}" != "default" & "${DB(RINGGROUP/600/changecid)}" != ""]?sub-rgsetcid,s,1)
exten => 600,n,Set(RecordMethod=Group)
exten => 600,n,Macro(record-enable,100-102-101-301-302-303-501,${RecordMethod})
exten => 600,n,Set(RingGroupMethod=ringall)
exten => 600,n(DIALGRP),Macro(dial,20,${DIAL_OPTIONS},100-102-101-301-302-303-501)
exten => 600,n,Set(RingGroupMethod=)
exten => 600,n,GotoIf($["foo${RRNODEST}" != "foo"]?nodest)
exten => 600,n,Set(__NODEST=)
exten => 600,n,Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})
exten => 600,n,Goto(ext-miscdests,1,1)
exten => 600,n(nodest),Noop(SKIPPING DEST, CALL CAME FROM Q/RG: ${RRNODEST})
exten => 601,1,Macro(user-callerid,)
exten => 601,n,GotoIf($["foo${BLKVM_OVERRIDE}" = "foo"]?skipdb)
exten => 601,n,GotoIf($["${DB(${BLKVM_OVERRIDE})}" = "TRUE"]?skipov)
exten => 601,n(skipdb),Set(__NODEST=)
exten => 601,n,Set(__BLKVM_OVERRIDE=BLKVM/${EXTEN}/${CHANNEL})
exten => 601,n,Set(__BLKVM_BASE=${EXTEN})
exten => 601,n,Set(DB(${BLKVM_OVERRIDE})=TRUE)
exten => 601,n(skipov),Set(RRNODEST=${NODEST})
exten => 601,n(skipvmblk),Set(__NODEST=${EXTEN})
exten => 601,n,GosubIf($[${DB_EXISTS(RINGGROUP/601/changecid)} = 1 & "${DB(RINGGROUP/601/changecid)}" != "default" & "${DB(RINGGROUP/601/changecid)}" != ""]?sub-rgsetcid,s,1)
exten => 601,n,Set(RecordMethod=Group)
exten => 601,n,Macro(record-enable,657284315#-607456696#,${RecordMethod})
exten => 601,n,Set(RingGroupMethod=hunt)
exten => 601,n(DIALGRP),Macro(dial,20,${DIAL_OPTIONS},657284315#-607456696#)
exten => 601,n,Set(RingGroupMethod=)
exten => 601,n,GotoIf($["foo${RRNODEST}" != "foo"]?nodest)
exten => 601,n,Set(__NODEST=)
exten => 601,n,Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})
exten => 601,n,Goto(ext-group,601,1)
exten => 601,n(nodest),Noop(SKIPPING DEST, CALL CAME FROM Q/RG: ${RRNODEST})
exten => h,1,Macro(hangupcall,)

; end of [ext-group]


[sub-rgsetcid]
include => sub-rgsetcid-custom
exten => s,1,Goto(s-${DB(RINGGROUP/${BLKVM_BASE}/changecid)},1)
exten => s-fixed,1,ExecIf($["${REGEX("^[\+]?[0-9]+$" ${DB(RINGGROUP/${BLKVM_BASE}/fixedcid)})}" = "1"]?Set(__TRUNKCIDOVERRIDE=${DB(RINGGROUP/${BLKVM_BASE}/fixedcid)}))
exten => s-fixed,n,Return()
exten => s-extern,1,ExecIf($["${REGEX("^[\+]?[0-9]+$" ${DB(RINGGROUP/${BLKVM_BASE}/fixedcid)})}" == "1" & "${FROM_DID}" != ""]?Set(__TRUNKCIDOVERRIDE=${DB(RINGGROUP/${BLKVM_BASE}/fixedcid)}))
exten => s-extern,n,Return()
exten => s-did,1,ExecIf($["${REGEX("^[\+]?[0-9]+$" ${FROM_DID})}" = "1"]?Set(__REALCALLERIDNUM=${FROM_DID}))
exten => s-did,n,Return()
exten => s-forcedid,1,ExecIf($["${REGEX("^[\+]?[0-9]+$" ${FROM_DID})}" = "1"]?Set(__TRUNKCIDOVERRIDE=${FROM_DID}))
exten => s-forcedid,n,Return()
exten => _s-.,1,Noop(Unknown value for RINGGROUP/${BLKVM_BASE}/changecid of ${DB(RINGGROUP/${BLKVM_BASE}/changecid)} set to "default")
exten => _s-.,n,Set(DB(RINGGROUP/${BLKVM_BASE}/changecid)=default)
exten => _s-.,n,Return()

; end of [sub-rgsetcid]


[app-calltrace]
include => app-calltrace-custom
exten => *69,1,Goto(app-calltrace-perform,s,1)

; end of [app-calltrace]


[app-calltrace-perform]
include => app-calltrace-perform-custom
exten => s,1,Answer
exten => s,n,Wait(1)
exten => s,n,Macro(user-callerid,)
exten => s,n,Playback(info-about-last-call&telephone-number)
exten => s,n,Set(lastcaller=${DB(CALLTRACE/${AMPUSER})})
exten => s,n,GotoIf($[ $[ "${lastcaller}" = "" ] | $[ "${lastcaller}" = "unknown" ] ]?noinfo)
exten => s,n,SayDigits(${lastcaller})
exten => s,n,Set(TIMEOUT(digit)=3)
exten => s,n,Set(TIMEOUT(response)=7)
exten => s,n,Background(to-call-this-number&press-1)
exten => s,n,Goto(fin)
exten => s,n(noinfo),Playback(from-unknown-caller)
exten => s,n,Macro(hangupcall,)
exten => s,n(fin),Noop(Waiting for input)
exten => s,n,WaitExten(60,)
exten => s,n,Playback(sorry-youre-having-problems&goodbye)
exten => 1,1,Goto(from-internal,${lastcaller},1)
exten => i,1,Playback(vm-goodbye)
exten => i,n,Macro(hangupcall,)
exten => t,1,Playback(vm-goodbye)
exten => t,n,Macro(hangupcall,)

; end of [app-calltrace-perform]


[app-directory]
include => app-directory-custom
exten => #,1,Answer
exten => #,n,Wait(1)
exten => #,n,AGI(directory,${DIR-CONTEXT},from-did-direct,${DIRECTORY:0:1}${DIRECTORY_OPTS})
exten => #,n,Playback(vm-goodbye)
exten => #,n,Hangup
exten => i,1,Playback(privacy-incorrect)

; end of [app-directory]


[app-echo-test]
include => app-echo-test-custom
exten => *43,1,Answer
exten => *43,n,Wait(1)
exten => *43,n,Playback(demo-echotest)
exten => *43,n,Echo()
exten => *43,n,Playback(demo-echodone)
exten => *43,n,Hangup

; end of [app-echo-test]


[app-speakextennum]
include => app-speakextennum-custom
exten => *65,1,Answer
exten => *65,n,Wait(1)
exten => *65,n,Macro(user-callerid,)
exten => *65,n,Playback(your)
exten => *65,n,Playback(extension)
exten => *65,n,Playback(number)
exten => *65,n,Playback(is)
exten => *65,n,SayDigits(${AMPUSER})
exten => *65,n,Wait(2)
exten => *65,n,Hangup

; end of [app-speakextennum]


[app-speakingclock]
include => app-speakingclock-custom
exten => *60,1,Answer
exten => *60,n,Wait(1)
exten => *60,n,Set(NumLoops=0)
exten => *60,n(start),Set(FutureTime=$[${EPOCH} + 11])
exten => *60,n,Playback(at-tone-time-exactly)
exten => *60,n,GotoIf($["${TIMEFORMAT}" = "kM"]?hr24format)
exten => *60,n,SayUnixTime(${FutureTime},,IM 'and' S 'seconds' p)
exten => *60,n,Goto(waitloop)
exten => *60,n(hr24format),SayUnixTime(${FutureTime},,kM 'and' S 'seconds')
exten => *60,n(waitloop),Set(TimeLeft=$[${FutureTime} - ${EPOCH}])
exten => *60,n,GotoIf($[${TimeLeft} < 1]?playbeep)
exten => *60,n,Wait(1)
exten => *60,n,Goto(waitloop)
exten => *60,n(playbeep),Playback(beep)
exten => *60,n,Wait(5)
exten => *60,n,Set(NumLoops=$[${NumLoops} + 1])
exten => *60,n,GotoIf($[${NumLoops} < 5]?start)
exten => *60,n,Playback(goodbye)
exten => *60,n,Hangup

; end of [app-speakingclock]


[app-cf-busy-off]
include => app-cf-busy-off-custom
exten => *91,1,Answer
exten => *91,n,Wait(1)
exten => *91,n,Macro(user-callerid,)
exten => *91,n,Set(fromext=${AMPUSER})
exten => *91,n,Noop(Deleting: CFB/${fromext} ${DB_DELETE(CFB/${fromext})})
exten => *91,n(hook_1),Playback(call-fwd-on-busy&de-activated)
exten => *91,n,Macro(hangupcall,)
exten => _*91.,1,Answer
exten => _*91.,n,Wait(1)
exten => _*91.,n,Set(fromext=${EXTEN:3})
exten => _*91.,n,Noop(Deleting: CFB/${fromext} ${DB_DELETE(CFB/${fromext})})
exten => _*91.,n(hook_2),Playback(call-fwd-on-busy&for&extension)
exten => _*91.,n,SayDigits(${fromext})
exten => _*91.,n,Playback(cancelled)
exten => _*91.,n,Macro(hangupcall,)

; end of [app-cf-busy-off]


[app-cf-busy-off-any]
include => app-cf-busy-off-any-custom
exten => *92,1,Answer
exten => *92,n,Wait(1)
exten => *92,n,Macro(user-callerid,)
exten => *92,n,Playback(please-enter-your&extension)
exten => *92,n,Read(fromext,then-press-pound,,,,)
exten => *92,n,Set(fromext=${IF($["foo${fromext}"="foo"]?${AMPUSER}:${fromext})})
exten => *92,n,Wait(1)
exten => *92,n,Noop(Deleting: CFB/${fromext} ${DB_DELETE(CFB/${fromext})})
exten => *92,n(hook_1),Playback(call-fwd-on-busy&for&extension)
exten => *92,n,SayDigits(${fromext})
exten => *92,n,Playback(cancelled)
exten => *92,n,Macro(hangupcall,)

; end of [app-cf-busy-off-any]


[app-cf-busy-on]
include => app-cf-busy-on-custom
exten => *90,1,Answer
exten => *90,n,Wait(1)
exten => *90,n,Macro(user-callerid,)
exten => *90,n,Playback(call-fwd-on-busy)
exten => *90,n,Playback(please-enter-your&extension)
exten => *90,n,Read(fromext,then-press-pound,,,,)
exten => *90,n,Set(fromext=${IF($["foo${fromext}"="foo"]?${AMPUSER}:${fromext})})
exten => *90,n,Wait(1)
exten => *90,n(startread),Playback(ent-target-attendant)
exten => *90,n,Read(toext,then-press-pound,,,,)
exten => *90,n,GotoIf($["foo${toext}"="foo"]?startread)
exten => *90,n,Wait(1)
exten => *90,n,Set(DB(CFB/${fromext})=${toext})
exten => *90,n(hook_1),Playback(call-fwd-on-busy&for&extension)
exten => *90,n,SayDigits(${fromext})
exten => *90,n,Playback(is-set-to)
exten => *90,n,SayDigits(${toext})
exten => *90,n,Macro(hangupcall,)
exten => _*90.,1,Answer
exten => _*90.,n,Wait(1)
exten => _*90.,n,Macro(user-callerid,)
exten => _*90.,n,Set(fromext=${AMPUSER})
exten => _*90.,n,Set(toext=${EXTEN:3})
exten => _*90.,n,Set(DB(CFB/${fromext})=${toext})
exten => _*90.,n(hook_2),Playback(call-fwd-on-busy&for&extension)
exten => _*90.,n,SayDigits(${fromext})
exten => _*90.,n,Playback(is-set-to)
exten => _*90.,n,SayDigits(${toext})
exten => _*90.,n,Macro(hangupcall,)

; end of [app-cf-busy-on]


[app-cf-off]
include => app-cf-off-custom
exten => *73,1,Answer
exten => *73,n,Wait(1)
exten => *73,n,Macro(user-callerid,)
exten => *73,n,Set(fromext=${AMPUSER})
exten => *73,n,Noop(Deleting: CF/${fromext} ${DB_DELETE(CF/${fromext})})
exten => *73,n,Set(STATE=NOT_INUSE)
exten => *73,n,Gosub(app-cf-off,sstate,1)
exten => *73,n(hook_1),Playback(call-fwd-unconditional&de-activated)
exten => *73,n,Macro(hangupcall,)
exten => _*73.,1,Answer
exten => _*73.,n,Wait(1)
exten => _*73.,n,Set(fromext=${EXTEN:3})
exten => _*73.,n,Noop(Deleting: CF/${fromext} ${DB_DELETE(CF/${fromext})})
exten => _*73.,n,Set(STATE=NOT_INUSE)
exten => _*73.,n,Gosub(app-cf-off,sstate,1)
exten => _*73.,n(hook_2),Playback(call-fwd-unconditional&for&extension)
exten => _*73.,n,SayDigits(${fromext})
exten => _*73.,n,Playback(cancelled)
exten => _*73.,n,Macro(hangupcall,)
exten => sstate,1,Set(DEVICE_STATE(Custom:CF${fromext})=${STATE})
exten => sstate,n,Set(DEVICES=${DB(AMPUSER/${fromext}/device)})
exten => sstate,n,GotoIf($["${DEVICES}" = "" ]?return)
exten => sstate,n,Set(LOOPCNT=${FIELDQTY(DEVICES,&)})
exten => sstate,n,Set(ITER=1)
exten => sstate,n(begin),Set(DEVICE_STATE(Custom:DEVCF${CUT(DEVICES,&,${ITER})})=${STATE})
exten => sstate,n,Set(ITER=$[${ITER} + 1])
exten => sstate,n,GotoIf($[${ITER} <= ${LOOPCNT}]?begin)
exten => sstate,n(return),Return()

; end of [app-cf-off]


[app-cf-off-any]
include => app-cf-off-any-custom
exten => *74,1,Answer
exten => *74,n,Wait(1)
exten => *74,n,Macro(user-callerid,)
exten => *74,n,Playback(please-enter-your&extension)
exten => *74,n,Read(fromext,then-press-pound,,,,)
exten => *74,n,Set(fromext=${IF($["foo${fromext}"="foo"]?${AMPUSER}:${fromext})})
exten => *74,n,Wait(1)
exten => *74,n,Noop(Deleting: CF/${fromext} ${DB_DELETE(CF/${fromext})})
exten => *74,n,Set(STATE=NOT_INUSE)
exten => *74,n,Gosub(app-cf-off-any,sstate,1)
exten => *74,n(hook_1),Playback(call-fwd-unconditional&for&extension)
exten => *74,n,SayDigits(${fromext})
exten => *74,n,Playback(cancelled)
exten => *74,n,Macro(hangupcall,)
exten => sstate,1,Set(DEVICE_STATE(Custom:CF${fromext})=${STATE})
exten => sstate,n,Set(DEVICES=${DB(AMPUSER/${fromext}/device)})
exten => sstate,n,GotoIf($["${DEVICES}" = "" ]?return)
exten => sstate,n,Set(LOOPCNT=${FIELDQTY(DEVICES,&)})
exten => sstate,n,Set(ITER=1)
exten => sstate,n(begin),Set(DEVICE_STATE(Custom:DEVCF${CUT(DEVICES,&,${ITER})})=${STATE})
exten => sstate,n,Set(ITER=$[${ITER} + 1])
exten => sstate,n,GotoIf($[${ITER} <= ${LOOPCNT}]?begin)
exten => sstate,n(return),Return()

; end of [app-cf-off-any]


[app-cf-on]
include => app-cf-on-custom
exten => *72,1,Answer
exten => *72,n,Wait(1)
exten => *72,n,Macro(user-callerid,)
exten => *72,n,Playback(call-fwd-unconditional)
exten => *72,n,Playback(please-enter-your&extension)
exten => *72,n,Read(fromext,then-press-pound,,,,)
exten => *72,n,Set(fromext=${IF($["foo${fromext}"="foo"]?${AMPUSER}:${fromext})})
exten => *72,n,Wait(1)
exten => *72,n(startread),Playback(ent-target-attendant)
exten => *72,n,Read(toext,then-press-pound,,,,)
exten => *72,n,GotoIf($["foo${toext}"="foo"]?startread)
exten => *72,n,Wait(1)
exten => *72,n,Set(DB(CF/${fromext})=${toext})
exten => *72,n,Set(STATE=BUSY)
exten => *72,n,Gosub(app-cf-on,sstate,1)
exten => *72,n(hook_1),Playback(call-fwd-unconditional&for&extension)
exten => *72,n,SayDigits(${fromext})
exten => *72,n,Playback(is-set-to)
exten => *72,n,SayDigits(${toext})
exten => *72,n,Macro(hangupcall,)
exten => _*72.,1,Answer
exten => _*72.,n,Wait(1)
exten => _*72.,n,Macro(user-callerid,)
exten => _*72.,n,Set(fromext=${AMPUSER})
exten => _*72.,n,Set(toext=${EXTEN:3})
exten => _*72.,n,Set(DB(CF/${fromext})=${toext})
exten => _*72.,n,Set(STATE=BUSY)
exten => _*72.,n,Gosub(app-cf-on,sstate,1)
exten => _*72.,n(hook_2),Playback(call-fwd-unconditional&for&extension)
exten => _*72.,n,SayDigits(${fromext})
exten => _*72.,n,Playback(is-set-to)
exten => _*72.,n,SayDigits(${toext})
exten => _*72.,n,Macro(hangupcall,)
exten => sstate,1,Set(DEVICE_STATE(Custom:CF${fromext})=${STATE})
exten => sstate,n,Set(DEVICES=${DB(AMPUSER/${fromext}/device)})
exten => sstate,n,GotoIf($["${DEVICES}" = "" ]?return)
exten => sstate,n,Set(LOOPCNT=${FIELDQTY(DEVICES,&)})
exten => sstate,n,Set(ITER=1)
exten => sstate,n(begin),Set(DEVICE_STATE(Custom:DEVCF${CUT(DEVICES,&,${ITER})})=${STATE})
exten => sstate,n,Set(ITER=$[${ITER} + 1])
exten => sstate,n,GotoIf($[${ITER} <= ${LOOPCNT}]?begin)
exten => sstate,n(return),Return()

; end of [app-cf-on]


[app-cf-unavailable-off]
include => app-cf-unavailable-off-custom
exten => *53,1,Answer
exten => *53,n,Wait(1)
exten => *53,n,Macro(user-callerid,)
exten => *53,n,Set(fromext=${AMPUSER})
exten => *53,n,Noop(Deleting: CFU/${fromext} ${DB_DELETE(CFU/${fromext})})
exten => *53,n(hook_1),Playback(call-fwd-no-ans&de-activated)
exten => *53,n,Macro(hangupcall,)
exten => _*53.,1,Answer
exten => _*53.,n,Wait(1)
exten => _*53.,n,Set(fromext=${EXTEN:3})
exten => _*53.,n,Noop(Deleting: CFU/${fromext} ${DB_DELETE(CFU/${fromext})})
exten => _*53.,n(hook_2),Playback(call-fwd-no-ans&for&extension)
exten => _*53.,n,SayDigits(${fromext})
exten => _*53.,n,Playback(cancelled)
exten => _*53.,n,Macro(hangupcall,)

; end of [app-cf-unavailable-off]


[app-cf-unavailable-on]
include => app-cf-unavailable-on-custom
exten => *52,1,Answer
exten => *52,n,Wait(1)
exten => *52,n,Macro(user-callerid,)
exten => *52,n,Playback(call-fwd-no-ans)
exten => *52,n,Playback(please-enter-your&extension)
exten => *52,n,Read(fromext,then-press-pound,,,,)
exten => *52,n,Set(fromext=${IF($["foo${fromext}"="foo"]?${AMPUSER}:${fromext})})
exten => *52,n,Wait(1)
exten => *52,n(startread),Playback(ent-target-attendant)
exten => *52,n,Read(toext,then-press-pound,,,,)
exten => *52,n,GotoIf($["foo${toext}"="foo"]?startread)
exten => *52,n,Wait(1)
exten => *52,n,Set(DB(CFU/${fromext})=${toext})
exten => *52,n(hook_1),Playback(call-fwd-no-ans&for&extension)
exten => *52,n,SayDigits(${fromext})
exten => *52,n,Playback(is-set-to)
exten => *52,n,SayDigits(${toext})
exten => *52,n,Macro(hangupcall,)
exten => _*52.,1,Answer
exten => _*52.,n,Wait(1)
exten => _*52.,n,Macro(user-callerid,)
exten => _*52.,n,Set(fromext=${AMPUSER})
exten => _*52.,n,Set(toext=${EXTEN:3})
exten => _*52.,n,Set(DB(CFU/${fromext})=${toext})
exten => _*52.,n(hook_2),Playback(call-fwd-no-ans&for&extension)
exten => _*52.,n,SayDigits(${fromext})
exten => _*52.,n,Playback(is-set-to)
exten => _*52.,n,SayDigits(${toext})
exten => _*52.,n,Macro(hangupcall,)

; end of [app-cf-unavailable-on]


[app-cf-toggle]
include => app-cf-toggle-custom
exten => *740,1,Answer
exten => *740,n,Wait(1)
exten => *740,n,Macro(user-callerid,)
exten => *740,n,Set(fromext=${AMPUSER})
exten => *740,n,GotoIf($["${DB(CF/${fromext})}" = ""]?activate:deactivate)
exten => *740,n(activate),Playback(ent-target-attendant)
exten => *740,n,Read(toext,then-press-pound,,,,)
exten => *740,n,GotoIf($["${toext}"=""]?activate)
exten => *740,n,Wait(1)
exten => *740,n(toext),Set(DB(CF/${fromext})=${toext})
exten => *740,n,Set(STATE=BUSY)
exten => *740,n,Gosub(app-cf-toggle,sstate,1)
exten => *740,n(hook_on),Playback(call-fwd-unconditional&for&extension)
exten => *740,n,SayDigits(${fromext})
exten => *740,n,Playback(is-set-to)
exten => *740,n,SayDigits(${toext})
exten => *740,n,Macro(hangupcall,)
exten => *740,n(setdirect),Answer
exten => *740,n,Wait(1)
exten => *740,n,Macro(user-callerid,)
exten => *740,n,Goto(toext)
exten => *740,n(deactivate),Noop(Deleting: CF/${fromext} ${DB_DELETE(CF/${fromext})})
exten => *740,n,Set(STATE=NOT_INUSE)
exten => *740,n,Gosub(app-cf-toggle,sstate,1)
exten => *740,n(hook_off),Playback(call-fwd-unconditional&de-activated)
exten => *740,n,Macro(hangupcall,)
exten => sstate,1,Set(DEVICE_STATE(Custom:CF${fromext})=${STATE})
exten => sstate,n,Set(DEVICES=${DB(AMPUSER/${fromext}/device)})
exten => sstate,n,GotoIf($["${DEVICES}" = "" ]?return)
exten => sstate,n,Set(LOOPCNT=${FIELDQTY(DEVICES,&)})
exten => sstate,n,Set(ITER=1)
exten => sstate,n(begin),Set(DEVICE_STATE(Custom:DEVCF${CUT(DEVICES,&,${ITER})})=${STATE})
exten => sstate,n,Set(ITER=$[${ITER} + 1])
exten => sstate,n,GotoIf($[${ITER} <= ${LOOPCNT}]?begin)
exten => sstate,n(return),Return()

; end of [app-cf-toggle]


[ext-cf-hints]
include => ext-cf-hints-custom
exten => *740100,1,Goto(app-cf-toggle,*740,1)
exten => *740100,hint,Custom:DEVCF100
exten => _*740100.,1,Set(toext=${EXTEN:7})
exten => _*740100.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740101,1,Goto(app-cf-toggle,*740,1)
exten => *740101,hint,Custom:DEVCF101
exten => _*740101.,1,Set(toext=${EXTEN:7})
exten => _*740101.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740102,1,Goto(app-cf-toggle,*740,1)
exten => *740102,hint,Custom:DEVCF102
exten => _*740102.,1,Set(toext=${EXTEN:7})
exten => _*740102.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740103,1,Goto(app-cf-toggle,*740,1)
exten => *740103,hint,Custom:DEVCF103
exten => _*740103.,1,Set(toext=${EXTEN:7})
exten => _*740103.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740200,1,Goto(app-cf-toggle,*740,1)
exten => *740200,hint,Custom:DEVCF200
exten => _*740200.,1,Set(toext=${EXTEN:7})
exten => _*740200.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740201,1,Goto(app-cf-toggle,*740,1)
exten => *740201,hint,Custom:DEVCF201
exten => _*740201.,1,Set(toext=${EXTEN:7})
exten => _*740201.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740222,1,Goto(app-cf-toggle,*740,1)
exten => *740222,hint,Custom:DEVCF222
exten => _*740222.,1,Set(toext=${EXTEN:7})
exten => _*740222.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740301,1,Goto(app-cf-toggle,*740,1)
exten => *740301,hint,Custom:DEVCF301
exten => _*740301.,1,Set(toext=${EXTEN:7})
exten => _*740301.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740302,1,Goto(app-cf-toggle,*740,1)
exten => *740302,hint,Custom:DEVCF302
exten => _*740302.,1,Set(toext=${EXTEN:7})
exten => _*740302.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740303,1,Goto(app-cf-toggle,*740,1)
exten => *740303,hint,Custom:DEVCF303
exten => _*740303.,1,Set(toext=${EXTEN:7})
exten => _*740303.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740304,1,Goto(app-cf-toggle,*740,1)
exten => *740304,hint,Custom:DEVCF304
exten => _*740304.,1,Set(toext=${EXTEN:7})
exten => _*740304.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740305,1,Goto(app-cf-toggle,*740,1)
exten => *740305,hint,Custom:DEVCF305
exten => _*740305.,1,Set(toext=${EXTEN:7})
exten => _*740305.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740306,1,Goto(app-cf-toggle,*740,1)
exten => *740306,hint,Custom:DEVCF306
exten => _*740306.,1,Set(toext=${EXTEN:7})
exten => _*740306.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740333,1,Goto(app-cf-toggle,*740,1)
exten => *740333,hint,Custom:DEVCF333
exten => _*740333.,1,Set(toext=${EXTEN:7})
exten => _*740333.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740341,1,Goto(app-cf-toggle,*740,1)
exten => *740341,hint,Custom:DEVCF341
exten => _*740341.,1,Set(toext=${EXTEN:7})
exten => _*740341.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740342,1,Goto(app-cf-toggle,*740,1)
exten => *740342,hint,Custom:DEVCF342
exten => _*740342.,1,Set(toext=${EXTEN:7})
exten => _*740342.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740343,1,Goto(app-cf-toggle,*740,1)
exten => *740343,hint,Custom:DEVCF343
exten => _*740343.,1,Set(toext=${EXTEN:7})
exten => _*740343.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740344,1,Goto(app-cf-toggle,*740,1)
exten => *740344,hint,Custom:DEVCF344
exten => _*740344.,1,Set(toext=${EXTEN:7})
exten => _*740344.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740345,1,Goto(app-cf-toggle,*740,1)
exten => *740345,hint,Custom:DEVCF345
exten => _*740345.,1,Set(toext=${EXTEN:7})
exten => _*740345.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740346,1,Goto(app-cf-toggle,*740,1)
exten => *740346,hint,Custom:DEVCF346
exten => _*740346.,1,Set(toext=${EXTEN:7})
exten => _*740346.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740347,1,Goto(app-cf-toggle,*740,1)
exten => *740347,hint,Custom:DEVCF347
exten => _*740347.,1,Set(toext=${EXTEN:7})
exten => _*740347.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740348,1,Goto(app-cf-toggle,*740,1)
exten => *740348,hint,Custom:DEVCF348
exten => _*740348.,1,Set(toext=${EXTEN:7})
exten => _*740348.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740349,1,Goto(app-cf-toggle,*740,1)
exten => *740349,hint,Custom:DEVCF349
exten => _*740349.,1,Set(toext=${EXTEN:7})
exten => _*740349.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740350,1,Goto(app-cf-toggle,*740,1)
exten => *740350,hint,Custom:DEVCF350
exten => _*740350.,1,Set(toext=${EXTEN:7})
exten => _*740350.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740444,1,Goto(app-cf-toggle,*740,1)
exten => *740444,hint,Custom:DEVCF444
exten => _*740444.,1,Set(toext=${EXTEN:7})
exten => _*740444.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740500,1,Goto(app-cf-toggle,*740,1)
exten => *740500,hint,Custom:DEVCF500
exten => _*740500.,1,Set(toext=${EXTEN:7})
exten => _*740500.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740501,1,Goto(app-cf-toggle,*740,1)
exten => *740501,hint,Custom:DEVCF501
exten => _*740501.,1,Set(toext=${EXTEN:7})
exten => _*740501.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740502,1,Goto(app-cf-toggle,*740,1)
exten => *740502,hint,Custom:DEVCF502
exten => _*740502.,1,Set(toext=${EXTEN:7})
exten => _*740502.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740503,1,Goto(app-cf-toggle,*740,1)
exten => *740503,hint,Custom:DEVCF503
exten => _*740503.,1,Set(toext=${EXTEN:7})
exten => _*740503.,n,Goto(app-cf-toggle,*740,setdirect)
exten => *740504,1,Goto(app-cf-toggle,*740,1)
exten => *740504,hint,Custom:DEVCF504
exten => _*740504.,1,Set(toext=${EXTEN:7})
exten => _*740504.,n,Goto(app-cf-toggle,*740,setdirect)

; end of [ext-cf-hints]


[app-announcement-1]
include => app-announcement-1-custom
exten => s,1,GotoIf($["${CDR(disposition)}" = "ANSWERED"]?begin)
exten => s,n,Answer
exten => s,n,Wait(1)
exten => s,n(begin),Noop(Playing announcement OCUPADOS)
exten => s,n,Playback(custom/OCUPADO,noanswer)
exten => s,n,Goto(app-blackhole,busy,1)

; end of [app-announcement-1]


[app-daynight]
include => app-daynight-custom
exten => 0,1,GotoIf($["${DB(DAYNIGHT/C${EXTEN})}" = "NIGHT"]?ext-miscdests,1,1:timeconditions,1,1)

; end of [app-daynight]


[app-daynight-toggle]
include => app-daynight-toggle-custom
exten => *280,1,Answer
exten => *280,n,Wait(1)
exten => *280,n,Set(INDEX=0)
exten => *280,n,Set(DAYREC=beep&silence/1&day&reception&digits/0&activated)
exten => *280,n,Set(NIGHTREC=beep&silence/1&day&reception&digits/0&de-activated)
exten => *280,n,Goto(app-daynight-toggle,s,1)
exten => *280,hint,Custom:DAYNIGHT0
exten => s,1,Set(DAYNIGHTMODE=${DB(DAYNIGHT/C${INDEX})})
exten => s,n,GotoIf($["${DAYNIGHTMODE}" = "NIGHT"]?day:night)
exten => s,n(day),Set(DB(DAYNIGHT/C${INDEX})=DAY)
exten => s,n,Set(DEVICE_STATE(Custom:DAYNIGHT${INDEX})=NOT_INUSE)
exten => s,n(hook_day),Playback(${DAYREC})
exten => s,n,Hangup
exten => s,n(night),Set(DB(DAYNIGHT/C${INDEX})=NIGHT)
exten => s,n,Set(DEVICE_STATE(Custom:DAYNIGHT${INDEX})=INUSE)
exten => s,n(hook_night),Playback(${NIGHTREC})
exten => s,n,Hangup

; end of [app-daynight-toggle]


[app-recordings]
include => app-recordings-custom
exten => 8888,1,Macro(user-callerid,)
exten => 8888,n,Wait(2)
exten => 8888,n,Macro(systemrecording,dorecord)
exten => 9999,1,Macro(user-callerid,)
exten => 9999,n,Wait(2)
exten => 9999,n,Macro(systemrecording,docheck)

; end of [app-recordings]


[macro-systemrecording]
include => macro-systemrecording-custom
exten => s,1,Set(RECFILE=${IF($["${ARG2}" = ""]?/var/spool/asterisk/tmp/${AMPUSER}-ivrrecording:${ARG2})})
exten => s,n,ExecIf($["${ARG3}" != ""]?Authenticate(${ARG3}))
exten => s,n,Goto(${ARG1},1)
exten => dorecord,1,System(rm ${ASTVARLIBDIR}/sounds/${RECFILE}.*)
exten => dorecord,n,Record(${RECFILE}:wav)
exten => dorecord,n,Wait(1)
exten => dorecord,n,Goto(confmenu,1)
exten => docheck,1,Playback(beep)
exten => docheck,n(dc_start),Background(${RECFILE},m,${CHANNEL(language)},macro-systemrecording)
exten => docheck,n,Wait(1)
exten => docheck,n,Goto(confmenu,1)
exten => confmenu,1,Background(to-listen-to-it&press-1&to-rerecord-it&press-star&astcc-followed-by-pound,m,${CHANNEL(language)},macro-systemrecording)
exten => confmenu,n,Read(RECRESULT,,1,,,4)
exten => confmenu,n,GotoIf($["x${RECRESULT}"="x*"]?dorecord,1)
exten => confmenu,n,GotoIf($["x${RECRESULT}"="x1"]?docheck,2)
exten => confmenu,n,Goto(1)
exten => 1,1,Goto(docheck,dc_start)
exten => *,1,Goto(dorecord,1)
exten => t,1,Playback(goodbye)
exten => t,n,Hangup
exten => i,1,Playback(pm-invalid-option)
exten => i,n,Goto(confmenu,1)
exten => h,1,Hangup

; end of [macro-systemrecording]


[app-dialvm]
include => app-dialvm-custom
exten => *98,1,Answer
exten => *98,n(start),Wait(1)
exten => *98,n,Noop(app-dialvm: Asking for mailbox)
exten => *98,n,Read(MAILBOX,vm-login,,,3,2)
exten => *98,n(check),Noop(app-dialvm: Got Mailbox ${MAILBOX})
exten => *98,n,Macro(get-vmcontext,${MAILBOX})
exten => *98,n,MailBoxExists(${MAILBOX}@${VMCONTEXT})
exten => *98,n,GotoIf($["${VMBOXEXISTSSTATUS}" = "SUCCESS"]?good:bad)
exten => *98,n,Macro(hangupcall,)
exten => *98,n(good),Noop(app-dialvm: Good mailbox ${MAILBOX}@${VMCONTEXT})
exten => *98,n,VoiceMailMain(${MAILBOX}@${VMCONTEXT})
exten => *98,n,GotoIf($["${IVR_RETVM}" = "RETURN" & "${IVR_CONTEXT}" != ""]?playret)
exten => *98,n,Macro(hangupcall,)
exten => *98,n(bad),Noop(app-dialvm: BAD mailbox ${MAILBOX}@${VMCONTEXT})
exten => *98,n,Wait(1)
exten => *98,n,Noop(app-dialvm: Asking for password so people can't probe for existence of a mailbox)
exten => *98,n,Read(FAKEPW,vm-password,,,3,2)
exten => *98,n,Noop(app-dialvm: Asking for mailbox again)
exten => *98,n,Read(MAILBOX,vm-incorrect-mailbox,,,3,2)
exten => *98,n,Goto(check)
exten => *98,n,Macro(hangupcall,)
exten => *98,n(playret),Playback(beep&you-will-be-transfered-menu&silence/1)
exten => *98,n,Goto(${IVR_CONTEXT},return,1)
exten => _*98.,1,Answer
exten => _*98.,n,Wait(1)
exten => _*98.,n,Macro(get-vmcontext,${EXTEN:3})
exten => _*98.,n,VoiceMailMain(${EXTEN:3}@${VMCONTEXT})
exten => _*98.,n,GotoIf($["${IVR_RETVM}" = "RETURN" & "${IVR_CONTEXT}" != ""]?${IVR_CONTEXT},return,1)
exten => _*98.,n,Macro(hangupcall,)

; end of [app-dialvm]


[app-vmmain]
include => app-vmmain-custom
exten => *97,1,Answer
exten => *97,n,Wait(1)
exten => *97,n,Macro(user-callerid,)
exten => *97,n,Macro(get-vmcontext,${AMPUSER})
exten => *97,n(check),MailBoxExists(${AMPUSER}@${VMCONTEXT})
exten => *97,n,GotoIf($["${VMBOXEXISTSSTATUS}" = "SUCCESS"]?mbexist)
exten => *97,n,VoiceMailMain()
exten => *97,n,GotoIf($["${IVR_RETVM}" = "RETURN" & "${IVR_CONTEXT}" != ""]?playret)
exten => *97,n,Macro(hangupcall,)
exten => *97,check+101(mbexist),VoiceMailMain(${AMPUSER}@${VMCONTEXT})
exten => *97,n,GotoIf($["${IVR_RETVM}" = "RETURN" & "${IVR_CONTEXT}" != ""]?playret)
exten => *97,n,Macro(hangupcall,)
exten => *97,n(playret),Playback(beep&you-will-be-transfered-menu&silence/1)
exten => *97,n,Goto(${IVR_CONTEXT},return,1)

; end of [app-vmmain]


[cidlookup]
include => cidlookup-custom
exten => cidlookup_1,1,Set(CALLERID(name)=${CURL(http://vitrium7701CRC:LOperas93786@localhost:80/admin/modules/superfecta/bin/callerid.php?thenumber=${CALLERID(num)})})
exten => cidlookup_1,n,Return()
exten => cidlookup_2,1,Set(CALLERID(name)=${CURL(http://www.gestiondelatienda.com:80/gettelf.asp??dn=${CALLERID(num)}&q=C&f=S&)})
exten => cidlookup_2,n,Return()
exten => cidlookup_return,1,ExecIf($["${DB(cidname/${CALLERID(num)})}" != ""]?Set(CALLERID(name)=${DB(cidname/${CALLERID(num)})}))
exten => cidlookup_return,n,Return()

; end of [cidlookup]


[timeconditions]
include => timeconditions-custom
exten => 1,1,GotoIfTime(15:00-20:00,mon-fri,1-31,jan-dec?ext-queues,123,1)
exten => 1,n,GotoIfTime(08:00-14:00,mon-fri,1-31,jan-dec?ext-queues,123,1)
exten => 1,n,Goto(ivr-2,s,1)
exten => 2,1,GotoIfTime(15:00-20:00,mon-fri,1-31,jan-dec?ext-group,600,1)
exten => 2,n,GotoIfTime(08:00-14:00,mon-fri,1-31,jan-dec?ext-group,600,1)
exten => 2,n,Goto(ext-miscdests,1,1)

; end of [timeconditions]


[app-miscapps-1]
include => app-miscapps-1-custom
exten => 99001,1,Noop(Running miscapp 1: cola)
exten => 99001,n,Macro(user-callerid,)
exten => 99001,n,Goto(ext-queues,123,1)

; end of [app-miscapps-1]


[app-miscapps-2]
include => app-miscapps-2-custom
exten => 99002,1,Noop(Running miscapp 2: Mensaje)
exten => 99002,n,Macro(user-callerid,)
exten => 99002,n,Goto(app-announcement-1,s,1)

; end of [app-miscapps-2]


[app-miscapps-3]
include => app-miscapps-3-custom
exten => 99003,1,Noop(Running miscapp 3: test)
exten => 99003,n,Macro(user-callerid,)
exten => 99003,n,Goto(ivr-3,s,1)

; end of [app-miscapps-3]


[app-userlogonoff]
include => app-userlogonoff-custom
exten => *12,1,Macro(user-logoff,)
exten => *12,n(hook_off),Hangup
exten => *11,1,Macro(user-logon,)
exten => *11,n(hook_on_1),Hangup
exten => _*11.,1,Macro(user-logon,${EXTEN:3},)
exten => _*11.,n(hook_on_2),Hangup

; end of [app-userlogonoff]


[app-pickup]
include => app-pickup-custom
exten => _**.,1,Pickup(${EXTEN:2}&${EXTEN:2}@ext-local&${EXTEN:2}@from-internal&${EXTEN:2}@from-internal-xfer&${EXTEN:2}@from-did-direct&LC-${EXTEN:2}@from-internal&LC-${EXTEN:2}@from-internal-xfer&FMPR-${EXTEN:2}@from-internal&FMPR-${EXTEN:2}@from-internal-xfer&FMPR-${EXTEN:2}@from-did-direct)
exten => _**.,n,Hangup
exten => **100,1,Pickup(100&100@ext-local&100@from-internal&100@from-internal-xfer&100@from-did-direct&LC-100@from-internal&LC-100@from-internal-xfer&FMPR-100@from-internal&FMPR-100@from-internal-xfer&FMPR-100@from-did-direct&600@from-internal&600@from-internal-xfer&600@ext-group)
exten => **100,n,Hangup
exten => **102,1,Pickup(102&102@ext-local&102@from-internal&102@from-internal-xfer&102@from-did-direct&LC-102@from-internal&LC-102@from-internal-xfer&FMPR-102@from-internal&FMPR-102@from-internal-xfer&FMPR-102@from-did-direct&600@from-internal&600@from-internal-xfer&600@ext-group)
exten => **102,n,Hangup
exten => **101,1,Pickup(101&101@ext-local&101@from-internal&101@from-internal-xfer&101@from-did-direct&LC-101@from-internal&LC-101@from-internal-xfer&FMPR-101@from-internal&FMPR-101@from-internal-xfer&FMPR-101@from-did-direct&600@from-internal&600@from-internal-xfer&600@ext-group)
exten => **101,n,Hangup
exten => **301,1,Pickup(301&301@ext-local&301@from-internal&301@from-internal-xfer&301@from-did-direct&LC-301@from-internal&LC-301@from-internal-xfer&FMPR-301@from-internal&FMPR-301@from-internal-xfer&FMPR-301@from-did-direct&600@from-internal&600@from-internal-xfer&600@ext-group)
exten => **301,n,Hangup
exten => **302,1,Pickup(302&302@ext-local&302@from-internal&302@from-internal-xfer&302@from-did-direct&LC-302@from-internal&LC-302@from-internal-xfer&FMPR-302@from-internal&FMPR-302@from-internal-xfer&FMPR-302@from-did-direct&600@from-internal&600@from-internal-xfer&600@ext-group)
exten => **302,n,Hangup
exten => **303,1,Pickup(303&303@ext-local&303@from-internal&303@from-internal-xfer&303@from-did-direct&LC-303@from-internal&LC-303@from-internal-xfer&FMPR-303@from-internal&FMPR-303@from-internal-xfer&FMPR-303@from-did-direct&600@from-internal&600@from-internal-xfer&600@ext-group)
exten => **303,n,Hangup
exten => **501,1,Pickup(501&501@ext-local&501@from-internal&501@from-internal-xfer&501@from-did-direct&LC-501@from-internal&LC-501@from-internal-xfer&FMPR-501@from-internal&FMPR-501@from-internal-xfer&FMPR-501@from-did-direct&600@from-internal&600@from-internal-xfer&600@ext-group)
exten => **501,n,Hangup

; end of [app-pickup]


[app-zapbarge]
include => app-zapbarge-custom
exten => 888,1,Macro(user-callerid,)
exten => 888,n,Set(GROUP()=${CALLERID(number)})
exten => 888,n,Answer
exten => 888,n,Wait(1)
exten => 888,n,DAHDIBarge()
exten => 888,n,Hangup

; end of [app-zapbarge]


[app-chanspy]
include => app-chanspy-custom
exten => 555,1,Macro(user-callerid,)
exten => 555,n,Answer
exten => 555,n,Wait(1)
exten => 555,n,ChanSpy()
exten => 555,n,Hangup

; end of [app-chanspy]


[ext-test]
include => ext-test-custom
exten => 7777,1,Goto(from-pstn,${EXTEN},1)
exten => h,1,Macro(hangupcall,)

; end of [ext-test]


[ext-did]
include => ext-did-custom
include => ext-did-0001
include => ext-did-0002
exten => foo,1,Noop(bar)

; end of [ext-did]


[ext-did-0002]
include => ext-did-0002-custom
exten => 931760210,1,Set(__FROM_DID=${EXTEN})
exten => 931760210,n,ExecIf($[ "${CALLERID(name)}" = "" ] ?Set(CALLERID(name)=${CALLERID(num)}))
exten => 931760210,n,Set(__CALLINGPRES_SV=${CALLERPRES()})
exten => 931760210,n,Set(CALLERPRES()=allowed_not_screened)
exten => 931760210,n(dest-ext),Goto(from-did-direct,444,1)
exten => 937161010,1,Set(__FROM_DID=${EXTEN})
exten => 937161010,n,Gosub(cidlookup,cidlookup_2,1)
exten => 937161010,n,ExecIf($[ "${CALLERID(name)}" = "" ] ?Set(CALLERID(name)=${CALLERID(num)}))
exten => 937161010,n,Set(__CALLINGPRES_SV=${CALLERPRES()})
exten => 937161010,n,Set(CALLERPRES()=allowed_not_screened)
exten => 937161010,n(dest-ext),Goto(app-daynight,0,1)
exten => 937166868,1,Set(__FROM_DID=${EXTEN})
exten => 937166868,n,Gosub(cidlookup,cidlookup_2,1)
exten => 937166868,n,ExecIf($[ "${CALLERID(name)}" = "" ] ?Set(CALLERID(name)=${CALLERID(num)}))
exten => 937166868,n,Set(__CALLINGPRES_SV=${CALLERPRES()})
exten => 937166868,n,Set(CALLERPRES()=allowed_not_screened)
exten => 937166868,n(dest-ext),Goto(from-did-direct,304,1)

; end of [ext-did-0002]


[ext-did-catchall]
include => ext-did-catchall-custom
exten => s,1,Noop(No DID or CID Match)
exten => s,n(a2),Answer
exten => s,n,Wait(2)
exten => s,n,Playback(ss-noservice)
exten => s,n,SayAlpha(${FROM_DID})
exten => s,n,Hangup
exten => _.,1,Set(__FROM_DID=${EXTEN})
exten => _.,n,Noop(Received an unknown call with DID set to ${EXTEN})
exten => _.,n,Goto(s,a2)
exten => h,1,Hangup

; end of [ext-did-catchall]


[ext-local]
include => ext-local-custom
exten => 100,1,Macro(exten-vm,novm,100)
exten => 100,n,Goto(${IVR_CONTEXT},return,1)
exten => 100,hint,SIP/100
exten => 101,1,Macro(exten-vm,novm,101)
exten => 101,n,Goto(${IVR_CONTEXT},return,1)
exten => 101,hint,SIP/101
exten => 102,1,Macro(exten-vm,novm,102)
exten => 102,n,Goto(${IVR_CONTEXT},return,1)
exten => 102,hint,SIP/102
exten => 103,1,Macro(exten-vm,novm,103)
exten => 103,n,Goto(${IVR_CONTEXT},return,1)
exten => 103,hint,SIP/103
exten => 200,1,Macro(exten-vm,novm,200)
exten => 200,n,Goto(${IVR_CONTEXT},return,1)
exten => 200,hint,SIP/200
exten => 201,1,Macro(exten-vm,novm,201)
exten => 201,n,Goto(${IVR_CONTEXT},return,1)
exten => 201,hint,SIP/201
exten => 222,1,Macro(exten-vm,novm,222)
exten => 222,n,Goto(${IVR_CONTEXT},return,1)
exten => 222,hint,SIP/222
exten => 301,1,Macro(exten-vm,novm,301)
exten => 301,n,Goto(${IVR_CONTEXT},return,1)
exten => 301,n,Goto(from-internal,301,1)
exten => 301,hint,SIP/301
exten => 302,1,Macro(exten-vm,novm,302)
exten => 302,n,Goto(${IVR_CONTEXT},return,1)
exten => 302,n,Goto(from-internal,302,1)
exten => 302,hint,SIP/302
exten => 303,1,Macro(exten-vm,303,303)
exten => 303,n,Goto(vmret,1)
exten => 303,n,Goto(from-internal,303,1)
exten => 303,hint,SIP/303
exten => ${VM_PREFIX}303,1,Macro(vm,303,DIRECTDIAL,${IVR_RETVM})
exten => ${VM_PREFIX}303,n,Goto(vmret,1)
exten => vmb303,1,Macro(vm,303,BUSY,${IVR_RETVM})
exten => vmb303,n,Goto(vmret,1)
exten => vmu303,1,Macro(vm,303,NOANSWER,${IVR_RETVM})
exten => vmu303,n,Goto(vmret,1)
exten => vms303,1,Macro(vm,303,NOMESSAGE,${IVR_RETVM})
exten => vms303,n,Goto(vmret,1)
exten => 304,1,Macro(exten-vm,novm,304)
exten => 304,n,Goto(${IVR_CONTEXT},return,1)
exten => 304,hint,SIP/304
exten => 555,1,Goto(from-internal,304,1)
exten => 305,1,Macro(exten-vm,novm,305)
exten => 305,n,Goto(${IVR_CONTEXT},return,1)
exten => 305,hint,SIP/305
exten => 306,1,Macro(exten-vm,novm,306)
exten => 306,n,Goto(${IVR_CONTEXT},return,1)
exten => 306,hint,SIP/306
exten => 333,1,Macro(exten-vm,novm,333)
exten => 333,n,Goto(${IVR_CONTEXT},return,1)
exten => 333,hint,SIP/333
exten => 341,1,Macro(exten-vm,novm,341)
exten => 341,n,Goto(${IVR_CONTEXT},return,1)
exten => 341,hint,SIP/341
exten => 342,1,Macro(exten-vm,novm,342)
exten => 342,n,Goto(${IVR_CONTEXT},return,1)
exten => 342,hint,SIP/342
exten => 343,1,Macro(exten-vm,novm,343)
exten => 343,n,Goto(${IVR_CONTEXT},return,1)
exten => 343,hint,SIP/343
exten => 344,1,Macro(exten-vm,novm,344)
exten => 344,n,Goto(${IVR_CONTEXT},return,1)
exten => 344,hint,SIP/344
exten => 345,1,Macro(exten-vm,novm,345)
exten => 345,n,Goto(${IVR_CONTEXT},return,1)
exten => 345,hint,SIP/345
exten => 346,1,Macro(exten-vm,novm,346)
exten => 346,n,Goto(${IVR_CONTEXT},return,1)
exten => 346,hint,SIP/346
exten => 347,1,Macro(exten-vm,novm,347)
exten => 347,n,Goto(${IVR_CONTEXT},return,1)
exten => 347,hint,SIP/347
exten => 348,1,Macro(exten-vm,novm,348)
exten => 348,n,Goto(${IVR_CONTEXT},return,1)
exten => 348,hint,SIP/348
exten => 349,1,Macro(exten-vm,novm,349)
exten => 349,n,Goto(${IVR_CONTEXT},return,1)
exten => 349,hint,SIP/349
exten => 350,1,Macro(exten-vm,novm,350)
exten => 350,n,Goto(${IVR_CONTEXT},return,1)
exten => 350,hint,SIP/350
exten => 444,1,Macro(exten-vm,novm,444)
exten => 444,n,Goto(${IVR_CONTEXT},return,1)
exten => 444,hint,SIP/444
exten => 500,1,Macro(exten-vm,novm,500)
exten => 500,n,Goto(${IVR_CONTEXT},return,1)
exten => 500,hint,SIP/500
exten => diego,1,Goto(from-internal,500,1)
exten => 501,1,Macro(exten-vm,novm,501)
exten => 501,n,Goto(${IVR_CONTEXT},return,1)
exten => 501,n,Goto(from-internal,501,1)
exten => 501,hint,SIP/501
exten => 502,1,Macro(exten-vm,novm,502)
exten => 502,n,Goto(${IVR_CONTEXT},return,1)
exten => 502,hint,SIP/502
exten => 503,1,Macro(exten-vm,novm,503)
exten => 503,n,Goto(${IVR_CONTEXT},return,1)
exten => 503,n,Goto(from-internal,503,1)
exten => 503,hint,SIP/503
exten => 504,1,Macro(exten-vm,novm,504)
exten => 504,n,Goto(${IVR_CONTEXT},return,1)
exten => 504,n,Goto(from-internal,504,1)
exten => 504,hint,SIP/504
exten => vmret,1,GotoIf($["${IVR_RETVM}" = "RETURN" & "${IVR_CONTEXT}" != ""]?playret)
exten => vmret,n,Hangup
exten => vmret,n(playret),Playback(exited-vm-will-be-transfered&silence/1)
exten => vmret,n,Goto(${IVR_CONTEXT},return,1)

; end of [ext-local]


[from-did-direct-ivr]
include => from-did-direct-ivr-custom
exten => 100,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 100,n,Set(__NODEST=)
exten => 100,n,Goto(from-did-direct,100,1)
exten => 101,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 101,n,Set(__NODEST=)
exten => 101,n,Goto(from-did-direct,101,1)
exten => 102,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 102,n,Set(__NODEST=)
exten => 102,n,Goto(from-did-direct,102,1)
exten => 103,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 103,n,Set(__NODEST=)
exten => 103,n,Goto(from-did-direct,103,1)
exten => 200,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 200,n,Set(__NODEST=)
exten => 200,n,Goto(from-did-direct,200,1)
exten => 201,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 201,n,Set(__NODEST=)
exten => 201,n,Goto(from-did-direct,201,1)
exten => 222,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 222,n,Set(__NODEST=)
exten => 222,n,Goto(from-did-direct,222,1)
exten => 301,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 301,n,Set(__NODEST=)
exten => 301,n,Goto(from-did-direct,301,1)
exten => 302,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 302,n,Set(__NODEST=)
exten => 302,n,Goto(from-did-direct,302,1)
exten => 303,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 303,n,Set(__NODEST=)
exten => 303,n,Goto(from-did-direct,303,1)
exten => ${VM_PREFIX}303,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => ${VM_PREFIX}303,n,Set(__NODEST=)
exten => ${VM_PREFIX}303,n,Macro(vm,303,DIRECTDIAL,${IVR_RETVM})
exten => ${VM_PREFIX}303,n,GotoIf($["${IVR_RETVM}" = "RETURN" & "${IVR_CONTEXT}" != ""]?ext-local,vmret,playret)
exten => 304,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 304,n,Set(__NODEST=)
exten => 304,n,Goto(from-did-direct,304,1)
exten => 305,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 305,n,Set(__NODEST=)
exten => 305,n,Goto(from-did-direct,305,1)
exten => 306,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 306,n,Set(__NODEST=)
exten => 306,n,Goto(from-did-direct,306,1)
exten => 333,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 333,n,Set(__NODEST=)
exten => 333,n,Goto(from-did-direct,333,1)
exten => 341,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 341,n,Set(__NODEST=)
exten => 341,n,Goto(from-did-direct,341,1)
exten => 342,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 342,n,Set(__NODEST=)
exten => 342,n,Goto(from-did-direct,342,1)
exten => 343,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 343,n,Set(__NODEST=)
exten => 343,n,Goto(from-did-direct,343,1)
exten => 344,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 344,n,Set(__NODEST=)
exten => 344,n,Goto(from-did-direct,344,1)
exten => 345,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 345,n,Set(__NODEST=)
exten => 345,n,Goto(from-did-direct,345,1)
exten => 346,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 346,n,Set(__NODEST=)
exten => 346,n,Goto(from-did-direct,346,1)
exten => 347,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 347,n,Set(__NODEST=)
exten => 347,n,Goto(from-did-direct,347,1)
exten => 348,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 348,n,Set(__NODEST=)
exten => 348,n,Goto(from-did-direct,348,1)
exten => 349,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 349,n,Set(__NODEST=)
exten => 349,n,Goto(from-did-direct,349,1)
exten => 350,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 350,n,Set(__NODEST=)
exten => 350,n,Goto(from-did-direct,350,1)
exten => 444,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 444,n,Set(__NODEST=)
exten => 444,n,Goto(from-did-direct,444,1)
exten => 500,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 500,n,Set(__NODEST=)
exten => 500,n,Goto(from-did-direct,500,1)
exten => 501,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 501,n,Set(__NODEST=)
exten => 501,n,Goto(from-did-direct,501,1)
exten => 502,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 502,n,Set(__NODEST=)
exten => 502,n,Goto(from-did-direct,502,1)
exten => 503,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 503,n,Set(__NODEST=)
exten => 503,n,Goto(from-did-direct,503,1)
exten => 504,1,ExecIf($["${BLKVM_OVERRIDE}" != ""]?Noop(Deleting: ${BLKVM_OVERRIDE}: ${DB_DELETE(${BLKVM_OVERRIDE})}))
exten => 504,n,Set(__NODEST=)
exten => 504,n,Goto(from-did-direct,504,1)

; end of [from-did-direct-ivr]


[from-trunk-sip-TELSOME931760210]
include => from-trunk-sip-TELSOME931760210-custom
exten => _.,1,Set(GROUP()=OUT_1)
exten => _.,n,Goto(from-trunk,${EXTEN},1)

; end of [from-trunk-sip-TELSOME931760210]


[from-trunk-sip-VOIPBUSTERPRO]
include => from-trunk-sip-VOIPBUSTERPRO-custom
exten => _.,1,Set(GROUP()=OUT_2)
exten => _.,n,Goto(from-trunk,${EXTEN},1)

; end of [from-trunk-sip-VOIPBUSTERPRO]


[from-trunk-sip-12VOIP]
include => from-trunk-sip-12VOIP-custom
exten => _.,1,Set(GROUP()=OUT_4)
exten => _.,n,Goto(from-trunk,${EXTEN},1)

; end of [from-trunk-sip-12VOIP]


[from-trunk-sip-TELSOME6868]
include => from-trunk-sip-TELSOME6868-custom
exten => _.,1,Set(GROUP()=OUT_5)
exten => _.,n,Goto(from-trunk,${EXTEN},1)

; end of [from-trunk-sip-TELSOME6868]


[from-trunk-sip-TELSOME1010]
include => from-trunk-sip-TELSOME1010-custom
exten => _.,1,Set(GROUP()=OUT_6)
exten => _.,n,Goto(from-trunk,${EXTEN},1)

; end of [from-trunk-sip-TELSOME1010]


[macro-record-enable]
include => macro-record-enable-custom
exten => s,1,GotoIf($["${BLINDTRANSFER}" = ""]?check)
exten => s,n,ResetCDR(w)
exten => s,n,StopMixMonitor()
exten => s,n(check),ExecIf($["${ARG1}"=""]?MacroExit())
exten => s,n,GotoIf($["${ARG2}"="Group"]?Group:OUT)
exten => s,n(Group),Set(LOOPCNT=${FIELDQTY(ARG1,-)})
exten => s,n,Set(ITER=1)
exten => s,n(begin),Set(RECSET="${DB(AMPUSER/${CUT(ARG1,-,${ITER})}/recording)}")
exten => s,n,GotoIf($["${RECSET}"="" | "${CUT(RECSET,\\\|,2):3}" != "Always"]?continue)
exten => s,n,Set(TEXTEN=${CUT(ARG1,-,${ITER}))
exten => s,n,Noop(Recording enable for ${TEXTEN})
exten => s,n,Set(CALLFILENAME=g${TEXTEN}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${UNIQUEID})
exten => s,n,Goto(record)
exten => s,n(continue),Set(ITER=$[${ITER}+1])
exten => s,n,GotoIf($[${ITER}<=${LOOPCNT}]?begin)
exten => s,n(OUT),GotoIf($["${ARG2}"="IN"]?IN)
exten => s,n,ExecIf($["${CUT(DB(AMPUSER/${ARG1}/recording),\\\|,1):4}" != "Always"]?MacroExit())
exten => s,n,Noop(Recording enable for ${ARG1})
exten => s,n,Set(CALLFILENAME=OUT${ARG1}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${UNIQUEID})
exten => s,n,Goto(record)
exten => s,n(IN),ExecIf($["${CUT(DB(AMPUSER/${ARG1}/recording),\\\|,2):3}" != "Always"]?MacroExit())
exten => s,n,Noop(Recording enable for ${ARG1})
exten => s,n,Set(CALLFILENAME=IN${ARG1}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${UNIQUEID})
exten => s,n(record),MixMonitor(${MIXMON_DIR}${CALLFILENAME}.${MIXMON_FORMAT},,${MIXMON_POST})
exten => s,n,MacroExit()

; end of [macro-record-enable]


[outbound-allroutes]
include => outbound-allroutes-custom
include => outrt-001-9_outside
include => outrt-002-Moviles12VOIP
include => outrt-003-Numeros_cortos
include => outrt-004-Argentina
exten => _!,1,Macro(user-callerid,SKIPTTL,)

; end of [outbound-allroutes]


[outrt-001-9_outside]
include => outrt-001-9_outside-custom
exten => _0349.,1,Noop(Macro(user-callerid): executed in outbound-allroutes PRI 1)
exten => _0349.,n,Set(_NODEST=)
exten => _0349.,n,Macro(record-enable,${AMPUSER},OUT,)
exten => _0349.,n,Macro(dialout-trunk,4,${EXTEN},,)
exten => _0349.,n,Macro(outisbusy,)
exten => _349.,1,Noop(Macro(user-callerid): executed in outbound-allroutes PRI 1)
exten => _349.,n,Set(_NODEST=)
exten => _349.,n,Macro(record-enable,${AMPUSER},OUT,)
exten => _349.,n,Macro(dialout-trunk,4,${EXTEN},,)
exten => _349.,n,Macro(outisbusy,)
exten => _9.,1,Noop(Macro(user-callerid): executed in outbound-allroutes PRI 1)
exten => _9.,n,Set(_NODEST=)
exten => _9.,n,Macro(record-enable,${AMPUSER},OUT,)
exten => _9.,n,Macro(dialout-trunk,4,${EXTEN},,)
exten => _9.,n,Macro(outisbusy,)

; end of [outrt-001-9_outside]


[outrt-002-Moviles12VOIP]
include => outrt-002-Moviles12VOIP-custom
exten => _6.,1,Noop(Macro(user-callerid): executed in outbound-allroutes PRI 1)
exten => _6.,n,Set(_NODEST=)
exten => _6.,n,Macro(record-enable,${AMPUSER},OUT,)
exten => _6.,n,Macro(dialout-trunk,4,${EXTEN},,)
exten => _6.,n,Macro(outisbusy,)

; end of [outrt-002-Moviles12VOIP]


[outrt-003-Numeros_cortos]
include => outrt-003-Numeros_cortos-custom
exten => 900120900,1,Noop(Macro(user-callerid): executed in outbound-allroutes PRI 1)
exten => 900120900,n,Set(_NODEST=)
exten => 900120900,n,Macro(record-enable,${AMPUSER},OUT,)
exten => 900120900,n,Macro(dialout-trunk,5,${EXTEN},,)
exten => 900120900,n,Macro(outisbusy,)

; end of [outrt-003-Numeros_cortos]


[outrt-004-Argentina]
include => outrt-004-Argentina-custom
exten => _00.,1,Noop(Macro(user-callerid): executed in outbound-allroutes PRI 1)
exten => _00.,n,Set(_NODEST=)
exten => _00.,n,Macro(record-enable,${AMPUSER},OUT,)
exten => _00.,n,Macro(dialout-trunk,4,${EXTEN},,)
exten => _00.,n,Macro(outisbusy,)

; end of [outrt-004-Argentina]


[app-blackhole]
include => app-blackhole-custom
exten => hangup,1,Noop(Blackhole Dest: Hangup)
exten => hangup,n,Hangup
exten => zapateller,1,Noop(Blackhole Dest: Play SIT Tone)
exten => zapateller,n,Answer
exten => zapateller,n,Zapateller()
exten => musiconhold,1,Noop(Blackhole Dest: Put caller on hold forever)
exten => musiconhold,n,Answer
exten => musiconhold,n,MusicOnHold()
exten => congestion,1,Noop(Blackhole Dest: Congestion)
exten => congestion,n,Answer
exten => congestion,n,Playtones(congestion)
exten => congestion,n,Congestion(20)
exten => congestion,n,Hangup
exten => busy,1,Noop(Blackhole Dest: Busy)
exten => busy,n,Answer
exten => busy,n,Playtones(busy)
exten => busy,n,Busy(20)
exten => busy,n,Hangup
exten => ring,1,Noop(Blackhole Dest: Ring)
exten => ring,n,Answer
exten => ring,n,Playtones(ring)
exten => ring,n,Wait(300)
exten => ring,n,Hangup

; end of [app-blackhole]


[bad-number]
include => bad-number-custom
exten => _X.,1,ResetCDR()
exten => _X.,n,NoCDR()
exten => _X.,n,Wait(1)
exten => _X.,n,Playback(silence/1&cannot-complete-as-dialed&check-number-dial-again,noanswer)
exten => _X.,n,Wait(1)
exten => _X.,n,Congestion(20)
exten => _X.,n,Hangup

; end of [bad-number]


[macro-confirm]
include => macro-confirm-custom
exten => s,1,Set(LOOPCOUNT=0)
exten => s,n,Set(__MACRO_RESULT=ABORT)
exten => s,n,Set(MSG1=${IF($["foo${ARG1}" != "foo"]?${ARG1}:"incoming-call-1-accept-2-decline")})
exten => s,n(start),Background(${MSG1},m,${CHANNEL(language)},macro-confirm)
exten => s,n,Read(INPUT,,1,,,4)
exten => s,n,GotoIf($[${LEN(${INPUT})} > 0]?${INPUT},1:t,1)
exten => 1,1,GotoIf($["${DB_EXISTS(RG/${ARG3}/${UNIQCHAN})}" = "0"]?toolate,1)
exten => 1,n,Noop(Deleting: RG/${ARG3}/${UNIQCHAN} ${DB_DELETE(RG/${ARG3}/${UNIQCHAN})})
exten => 1,n,Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})
exten => 1,n,Set(__MACRO_RESULT=)
exten => 1,n(exitopt1),MacroExit()
exten => 2,1,Goto(noanswer,1)
exten => 3,1,SayDigits(${CALLCONFIRMCID})
exten => 3,n,GotoIf($["${DB_EXISTS(RG/${ARG3}/${UNIQCHAN})}" = "0"]?toolate,1:s,start)
exten => t,1,GotoIf($["${DB_EXISTS(RG/${ARG3}/${UNIQCHAN})}" = "0"]?toolate,1)
exten => t,n,Set(LOOPCOUNT=$[ ${LOOPCOUNT} + 1 ])
exten => t,n,GotoIf($[ ${LOOPCOUNT} < 5 ]?s,start:noanswer,1)
exten => _X,1,Background(invalid,m,${CHANNEL(language)},macro-confirm)
exten => _X,n,GotoIf($["${DB_EXISTS(RG/${ARG3}/${UNIQCHAN})}" = "0"]?toolate,1)
exten => _X,n,Set(LOOPCOUNT=$[ ${LOOPCOUNT} + 1 ])
exten => _X,n,GotoIf($[ ${LOOPCOUNT} < 5 ]?s,start:noanswer,1)
exten => noanswer,1,Set(__MACRO_RESULT=ABORT)
exten => noanswer,n(exitnoanswer),MacroExit()
exten => toolate,1,Set(MSG2=${IF($["foo${ARG2}" != "foo"]?${ARG2}:"incoming-call-no-longer-avail")})
exten => toolate,n,Playback(${MSG2})
exten => toolate,n,Set(__MACRO_RESULT=ABORT)
exten => toolate,n(exittoolate),MacroExit()
exten => h,1,Macro(hangupcall,)

; end of [macro-confirm]


[macro-auto-confirm]
include => macro-auto-confirm-custom
exten => s,1,Set(__MACRO_RESULT=)
exten => s,n,Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})
exten => s,n,Noop(Deleting: RG/${ARG1}/${UNIQCHAN} ${DB_DELETE(RG/${ARG1}/${UNIQCHAN})})

; end of [macro-auto-confirm]


[macro-auto-blkvm]
include => macro-auto-blkvm-custom
exten => s,1,Set(__MACRO_RESULT=)
exten => s,n,Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})

; end of [macro-auto-blkvm]


[sub-pincheck]
include => sub-pincheck-custom
exten => s,1,Authenticate(${ARG3},)
exten => s,n,ResetCDR()
exten => s,n,Return()

; end of [sub-pincheck]


[macro-dialout-trunk]
include => macro-dialout-trunk-custom
exten => s,1,Set(DIAL_TRUNK=${ARG1})
exten => s,n,GosubIf($[$["${ARG3}" != ""] & $["${DB(AMPUSER/${AMPUSER}/pinless)}" != "NOPASSWD"]]?sub-pincheck,s,1)
exten => s,n,GotoIf($["x${OUTDISABLE_${DIAL_TRUNK}}" = "xon"]?disabletrunk,1)
exten => s,n,Set(DIAL_NUMBER=${ARG2})
exten => s,n,Set(DIAL_TRUNK_OPTIONS=${DIAL_OPTIONS})
exten => s,n,Set(OUTBOUND_GROUP=OUT_${DIAL_TRUNK})
exten => s,n,GotoIf($["${OUTMAXCHANS_${DIAL_TRUNK}}foo" = "foo"]?nomax)
exten => s,n,GotoIf($[ ${GROUP_COUNT(OUT_${DIAL_TRUNK})} >= ${OUTMAXCHANS_${DIAL_TRUNK}} ]?chanfull)
exten => s,n(nomax),GotoIf($["${INTRACOMPANYROUTE}" = "YES"]?skipoutcid)
exten => s,n,Set(DIAL_TRUNK_OPTIONS=${TRUNK_OPTIONS})
exten => s,n,Macro(outbound-callerid,${DIAL_TRUNK})
exten => s,n(skipoutcid),ExecIf($["${PREFIX_TRUNK_${DIAL_TRUNK}}" != ""]?AGI(fixlocalprefix))
exten => s,n,Set(OUTNUM=${OUTPREFIX_${DIAL_TRUNK}}${DIAL_NUMBER})
exten => s,n,Set(custom=${CUT(OUT_${DIAL_TRUNK},:,1)})
exten => s,n,ExecIf($[$["${MOHCLASS}" != "default"] & $["${MOHCLASS}" != ""]]?Set(DIAL_TRUNK_OPTIONS=M(setmusic^${MOHCLASS})${DIAL_TRUNK_OPTIONS}))
exten => s,n(gocall),Macro(dialout-trunk-predial-hook,)
exten => s,n,GotoIf($["${PREDIAL_HOOK_RET}" = "BYPASS"]?bypass,1)
exten => s,n,GotoIf($["${custom}" = "AMP"]?customtrunk)
exten => s,n,Dial(${OUT_${DIAL_TRUNK}}/${OUTNUM},300,${DIAL_TRUNK_OPTIONS})
exten => s,n,Noop(Dial failed for some reason with DIALSTATUS = ${DIALSTATUS} and HANGUPCAUSE = ${HANGUPCAUSE})
exten => s,n,Goto(s-${DIALSTATUS},1)
exten => s,n(customtrunk),Set(pre_num=${CUT(OUT_${DIAL_TRUNK},$,1)})
exten => s,n,Set(the_num=${CUT(OUT_${DIAL_TRUNK},$,2)})
exten => s,n,Set(post_num=${CUT(OUT_${DIAL_TRUNK},$,3)})
exten => s,n,GotoIf($["${the_num}" = "OUTNUM"]?outnum:skipoutnum)
exten => s,n(outnum),Set(the_num=${OUTNUM})
exten => s,n(skipoutnum),Dial(${pre_num:4}${the_num}${post_num},300,${DIAL_TRUNK_OPTIONS})
exten => s,n,Noop(Dial failed for some reason with DIALSTATUS = ${DIALSTATUS} and HANGUPCAUSE = ${HANGUPCAUSE})
exten => s,n,Goto(s-${DIALSTATUS},1)
exten => s,n(chanfull),Noop(max channels used up)
exten => s-BUSY,1,Noop(Dial failed due to trunk reporting BUSY - giving up)
exten => s-BUSY,n,Playtones(busy)
exten => s-BUSY,n,Busy(20)
exten => s-ANSWER,1,Noop(Call successfully answered - Hanging up now)
exten => s-ANSWER,n,Macro(hangupcall,)
exten => s-NOANSWER,1,Noop(Dial failed due to trunk reporting NOANSWER - giving up)
exten => s-NOANSWER,n,Progress
exten => s-NOANSWER,n,Playback(number-not-answering,noanswer)
exten => s-NOANSWER,n,Congestion(20)
exten => s-INVALIDNMBR,1,Noop(Dial failed due to trunk reporting Address Incomplete - giving up)
exten => s-INVALIDNMBR,n,Progress
exten => s-INVALIDNMBR,n,Playback(ss-noservice,noanswer)
exten => s-INVALIDNMBR,n,Busy(20)
exten => s-CHANGED,1,Noop(Dial failed due to trunk reporting Number Changed - giving up)
exten => s-CHANGED,n,Playtones(busy)
exten => s-CHANGED,n,Busy(20)
exten => _s-.,1,Set(RC=${IF($[${ISNULL(${HANGUPCAUSE})}]?0:${HANGUPCAUSE})})
exten => _s-.,n,Goto(${RC},1)
exten => 17,1,Goto(s-BUSY,1)
exten => 18,1,Goto(s-NOANSWER,1)
exten => 22,1,Goto(s-CHANGED,1)
exten => 23,1,Goto(s-CHANGED,1)
exten => 28,1,Goto(s-INVALIDNMBR,1)
exten => _X.,1,Goto(continue,1)
exten => continue,1,GotoIf($["${OUTFAIL_${ARG1}}" = ""]?noreport)
exten => continue,n,AGI(${OUTFAIL_${ARG1}})
exten => continue,n(noreport),Noop(TRUNK Dial failed due to ${DIALSTATUS} HANGUPCAUSE: ${HANGUPCAUSE} - failing through to other trunks)
exten => disabletrunk,1,Noop(TRUNK: ${OUT_${DIAL_TRUNK}} DISABLED - falling through to next trunk)
exten => bypass,1,Noop(TRUNK: ${OUT_${DIAL_TRUNK}} BYPASSING because dialout-trunk-predial-hook)
exten => h,1,Macro(hangupcall,)

; end of [macro-dialout-trunk]


[macro-dialout-dundi]
include => macro-dialout-dundi-custom
exten => s,1,Set(DIAL_TRUNK=${ARG1})
exten => s,n,GosubIf($[$["${ARG3}" != ""] & $["${DB(AMPUSER/${AMPUSER}/pinless)}" != "NOPASSWD"]]?sub-pincheck,s,1)
exten => s,n,GotoIf($["x${OUTDISABLE_${DIAL_TRUNK}}" = "xon"]?disabletrunk,1)
exten => s,n,Set(DIAL_NUMBER=${ARG2})
exten => s,n,Set(DIAL_TRUNK_OPTIONS=${DIAL_OPTIONS})
exten => s,n,Set(OUTBOUND_GROUP=OUT_${DIAL_TRUNK})
exten => s,n,GotoIf($["${OUTMAXCHANS_${DIAL_TRUNK}}foo" = "foo"]?nomax)
exten => s,n,GotoIf($[ ${GROUP_COUNT(OUT_${DIAL_TRUNK})} >= ${OUTMAXCHANS_${DIAL_TRUNK}} ]?chanfull)
exten => s,n(nomax),GotoIf($["${INTRACOMPANYROUTE}" = "YES"]?skipoutcid)
exten => s,n,Set(DIAL_TRUNK_OPTIONS=${TRUNK_OPTIONS})
exten => s,n,Macro(outbound-callerid,${DIAL_TRUNK})
exten => s,n(skipoutcid),ExecIf($["${PREFIX_TRUNK_${DIAL_TRUNK}}" != ""]?AGI(fixlocalprefix))
exten => s,n,Set(OUTNUM=${OUTPREFIX_${DIAL_TRUNK}}${DIAL_NUMBER})
exten => s,n,ExecIf($[$["${MOHCLASS}" != "default"] & $["${MOHCLASS}" != ""]]?Set(DIAL_TRUNK_OPTIONS=M(setmusic^${MOHCLASS})${DIAL_TRUNK_OPTIONS}))
exten => s,n(gocall),Macro(dialout-dundi-predial-hook,)
exten => s,n,GotoIf($["${PREDIAL_HOOK_RET}" = "BYPASS"]?bypass,1)
exten => s,n,GotoIf($["${custom}" = "AMP"]?customtrunk)
exten => s,n,Macro(dundi-${DIAL_TRUNK},${OUTNUM})
exten => s,n,Goto(s-${DIALSTATUS},1)
exten => s,n(chanfull),Noop(max channels used up)
exten => s-BUSY,1,Noop(Dial failed due to trunk reporting BUSY - giving up)
exten => s-BUSY,n,Playtones(busy)
exten => s-BUSY,n,Busy(20)
exten => s-ANSWER,1,Noop(Call successfully answered - Hanging up now)
exten => s-ANSWER,n,Macro(hangupcall,)
exten => s-NOANSWER,1,Noop(Dial failed due to trunk reporting NOANSWER - giving up)
exten => s-NOANSWER,n,Progress
exten => s-NOANSWER,n,Playback(number-not-answering,noanswer)
exten => s-NOANSWER,n,Congestion(20)
exten => s-INVALIDNMBR,1,Noop(Dial failed due to trunk reporting Address Incomplete - giving up)
exten => s-INVALIDNMBR,n,Progress
exten => s-INVALIDNMBR,n,Playback(ss-noservice,noanswer)
exten => s-INVALIDNMBR,n,Busy(20)
exten => s-CHANGED,1,Noop(Dial failed due to trunk reporting Number Changed - giving up)
exten => s-CHANGED,n,Playtones(busy)
exten => s-CHANGED,n,Busy(20)
exten => _s-.,1,Set(RC=${IF($[${ISNULL(${HANGUPCAUSE})}]?0:${HANGUPCAUSE})})
exten => _s-.,n,Goto(${RC},1)
exten => 17,1,Goto(s-BUSY,1)
exten => 18,1,Goto(s-NOANSWER,1)
exten => 22,1,Goto(s-CHANGED,1)
exten => 23,1,Goto(s-CHANGED,1)
exten => 28,1,Goto(s-INVALIDNMBR,1)
exten => continue,1,GotoIf($["${OUTFAIL_${ARG1}}" = ""]?noreport)
exten => continue,n,AGI(${OUTFAIL_${ARG1}})
exten => continue,n(noreport),Noop(TRUNK Dial failed due to ${DIALSTATUS} HANGUPCAUSE: ${HANGUPCAUSE} - failing through to other trunks)
exten => disabletrunk,1,Noop(TRUNK: ${OUT_${DIAL_TRUNK}} DISABLED - falling through to next trunk)
exten => bypass,1,Noop(TRUNK: ${OUT_${DIAL_TRUNK}} BYPASSING because dialout-dundi-predial-hook)
exten => h,1,Macro(hangupcall,)

; end of [macro-dialout-dundi]


[macro-user-callerid]
include => macro-user-callerid-custom
exten => s,1,Set(AMPUSER=${IF($["foo${AMPUSER}" = "foo"]?${CALLERID(number)}:${AMPUSER})})
exten => s,n,GotoIf($["${CHANNEL:0:5}" = "Local"]?report)
exten => s,n,ExecIf($["${REALCALLERIDNUM:1:2}" = ""]?Set(REALCALLERIDNUM=${CALLERID(number)}))
exten => s,n,Set(AMPUSER=${DB(DEVICE/${REALCALLERIDNUM}/user)})
exten => s,n,Set(AMPUSERCIDNAME=${DB(AMPUSER/${AMPUSER}/cidname)})
exten => s,n,GotoIf($["x${AMPUSERCIDNAME:1:2}" = "x"]?report)
exten => s,n,Set(AMPUSERCID=${IF($["${DB_EXISTS(AMPUSER/${AMPUSER}/cidnum)}" = "1"]?${DB_RESULT}:${AMPUSER})})
exten => s,n,Set(CALLERID(all)="${AMPUSERCIDNAME}" <${AMPUSERCID}>)
exten => s,n(report),GotoIf($[ "${ARG1}" = "SKIPTTL" ]?continue)
exten => s,n(report2),Set(__TTL=${IF($["foo${TTL}" = "foo"]?64:$[ ${TTL} - 1 ])})
exten => s,n,GotoIf($[ ${TTL} > 0 ]?continue)
exten => s,n,Wait(${RINGTIMER})
exten => s,n,Answer
exten => s,n,Wait(2)
exten => s,n,Playback(im-sorry&an-error-has-occured&with&call-forwarding)
exten => s,n,Macro(hangupcall,)
exten => s,n,Congestion(20)
exten => s,n(continue),Noop(Using CallerID ${CALLERID(all)})
exten => h,1,Macro(hangupcall,)

; end of [macro-user-callerid]


[macro-dialout-enum]
include => macro-dialout-enum-custom
exten => s,1,GosubIf($[$["${ARG3}" != ""] & $["${DB(AMPUSER/${AMPUSER}/pinless)}" != "NOPASSWD"]]?sub-pincheck,s,1)
exten => s,n,Macro(outbound-callerid,${ARG1})
exten => s,n,Set(OUTBOUND_GROUP=OUT_${ARG1})
exten => s,n,GotoIf($["${OUTMAXCHANS_${ARG1}}foo" = "foo"]?nomax)
exten => s,n,GotoIf($[ ${GROUP_COUNT(OUT_${ARG1})} >= ${OUTMAXCHANS_${ARG1}} ]?nochans)
exten => s,n(nomax),Set(DIAL_NUMBER=${ARG2})
exten => s,n,Set(DIAL_TRUNK=${ARG1})
exten => s,n,ExecIf($["${PREFIX_TRUNK_${DIAL_TRUNK}}" != ""]?AGI(fixlocalprefix))
exten => s,n,AGI(enumlookup.agi)
exten => s,n(dialloop),GotoIf($["foo${DIALARR}"="foo"]?s-${DIALSTATUS},1)
exten => s,n,Set(TRYDIAL=${CUT(DIALARR,%,1)})
exten => s,n,Set(DIALARR=${CUT(DIALARR,%,2-)})
exten => s,n,Dial(${TRYDIAL},)
exten => s,n,GotoIf($[ $[ "${DIALSTATUS}" = "CHANUNAVAIL" ] | $[ "${DIALSTATUS}" = "CONGESTION" ] ]?dialloop:s-${DIALSTATUS},1)
exten => s,n(nochans),Noop(max channels used up)
exten => s-BUSY,1,Noop(Dial failed due to trunk reporting BUSY - giving up)
exten => s-BUSY,n,Playtones(busy)
exten => s-BUSY,n,Busy(20)
exten => s-ANSWER,1,Noop(Call successfully answered - Hanging up now)
exten => s-ANSWER,n,Macro(hangupcall,)
exten => s-NOANSWER,1,Noop(Dial failed due to trunk reporting NOANSWER - giving up)
exten => s-NOANSWER,n,Progress
exten => s-NOANSWER,n,Playback(number-not-answering,noanswer)
exten => s-NOANSWER,n,Congestion(20)
exten => s-INVALIDNMBR,1,Noop(Dial failed due to trunk reporting Address Incomplete - giving up)
exten => s-INVALIDNMBR,n,Progress
exten => s-INVALIDNMBR,n,Playback(ss-noservice,noanswer)
exten => s-INVALIDNMBR,n,Busy(20)
exten => s-CHANGED,1,Noop(Dial failed due to trunk reporting Number Changed - giving up)
exten => s-CHANGED,n,Playtones(busy)
exten => s-CHANGED,n,Busy(20)
exten => _s-.,1,Set(RC=${IF($[${ISNULL(${HANGUPCAUSE})}]?0:${HANGUPCAUSE})})
exten => _s-.,n,Goto(${RC},1)
exten => 17,1,Goto(s-BUSY,1)
exten => 18,1,Goto(s-NOANSWER,1)
exten => 22,1,Goto(s-CHANGED,1)
exten => 23,1,Goto(s-CHANGED,1)
exten => 28,1,Goto(s-INVALIDNMBR,1)
exten => _X.,1,Goto(continue,1)
exten => continue,1,GotoIf($["${OUTFAIL_${ARG1}}" = ""]?noreport)
exten => continue,n,AGI(${OUTFAIL_${ARG1}})
exten => continue,n(noreport),Noop(TRUNK Dial failed due to ${DIALSTATUS} HANGUPCAUSE: ${HANGUPCAUSE} - failing through to other trunks)
exten => disabletrunk,1,Noop(TRUNK: ${OUT_${DIAL_TRUNK}} DISABLED - falling through to next trunk)
exten => bypass,1,Noop(TRUNK: ${OUT_${DIAL_TRUNK}} BYPASSING because dialout-trunk-predial-hook)
exten => h,1,Macro(hangupcall,)

; end of [macro-dialout-enum]


[macro-outbound-callerid]
include => macro-outbound-callerid-custom
exten => s,1,ExecIf($["${CALLINGPRES_SV}" != ""]?Set(CALLERPRES()=${CALLINGPRES_SV}))
exten => s,n,ExecIf($["${REALCALLERIDNUM:1:2}" = ""]?Set(REALCALLERIDNUM=${CALLERID(number)}))
exten => s,n(start),GotoIf($[ $["${REALCALLERIDNUM}" = ""] | $["${KEEPCID}" != "TRUE"] | $["${OUTKEEPCID_${ARG1}}" = "on"] ]?normcid)
exten => s,n,Set(USEROUTCID=${REALCALLERIDNUM})
exten => s,n,GotoIf($["foo${DB(AMPUSER/${REALCALLERIDNUM}/device)}" = "foo"]?bypass)
exten => s,n(normcid),Set(USEROUTCID=${DB(AMPUSER/${AMPUSER}/outboundcid)})
exten => s,n(bypass),Set(EMERGENCYCID=${DB(DEVICE/${REALCALLERIDNUM}/emergency_cid)})
exten => s,n,Set(TRUNKOUTCID=${OUTCID_${ARG1}})
exten => s,n,GotoIf($["${EMERGENCYROUTE:1:2}" = "" | "${EMERGENCYCID:1:2}" = ""]?trunkcid)
exten => s,n,Set(CALLERID(all)=${EMERGENCYCID})
exten => s,n(exit),MacroExit()
exten => s,n(trunkcid),ExecIf($["${TRUNKOUTCID}" != ""]?Set(CALLERID(all)=${TRUNKOUTCID}))
exten => s,n(usercid),ExecIf($["${USEROUTCID}" != ""]?Set(CALLERID(all)=${USEROUTCID}))
exten => s,n,ExecIf($["${TRUNKCIDOVERRIDE}" != "" | "${FORCEDOUTCID_${ARG1}}" != ""]?Set(CALLERID(all)=${IF($["${FORCEDOUTCID_${ARG1}}"=""]?${TRUNKCIDOVERRIDE}:${FORCEDOUTCID_${ARG1}})}))
exten => s,n(hidecid),ExecIf($["${CALLERID(name)}"="hidden"]?Set(CALLERPRES()=prohib_passed_screen))

; end of [macro-outbound-callerid]


[from-zaptel]
include => from-zaptel-custom
exten => _X.,1,Set(DID=${EXTEN})
exten => _X.,n,Goto(s,1)
exten => s,1,Noop(Entering from-zaptel with DID == ${DID})
exten => s,n,Ringing()
exten => s,n,Set(DID=${IF($["${DID}"= ""]?s:${DID})})
exten => s,n,Noop(DID is now ${DID})
exten => s,n,GotoIf($["${CHANNEL:0:5}"="DAHDI"]?zapok:notzap)
exten => s,n(notzap),Goto(from-pstn,${DID},1)
exten => s,n,Macro(Hangupcall,dummy)
exten => s,n(zapok),Noop(Is a Zaptel Channel)
exten => s,n,Set(CHAN=${CHANNEL:6})
exten => s,n,Set(CHAN=${CUT(CHAN,-,1)})
exten => s,n,Macro(from-zaptel-${CHAN},${DID},1)
exten => s,n,Noop(Returned from Macro from-zaptel-${CHAN})
exten => s,n,Goto(from-pstn,${DID},1)

; end of [from-zaptel]


[vm-callme]
include => vm-callme-custom
exten => s,1,Answer
exten => s,n,Wait(1)
exten => s,n(repeat),Background(${MSG}&silence/2&vm-repeat&vm-starmain)
exten => s,n,WaitExten(15,)
exten => 5,1,Goto(s,repeat)
exten => #,1,Playback(vm-goodbye)
exten => #,n,Hangup
exten => *,1,Macro(get-vmcontext,${MBOX})
exten => *,n,VoiceMailMain(${MBOX}@${VMCONTEXT},s)
exten => i,1,Playback(pm-invalid-option)
exten => i,n,Goto(s,repeat)
exten => t,1,Playback(vm-goodbye)
exten => t,n,Hangup
exten => h,1,Hangup

; end of [vm-callme]


[macro-vm]
include => macro-vm-custom
exten => s,1,Macro(user-callerid,SKIPTTL)
exten => s,n,Set(VMGAIN=${IF($["foo${VM_GAIN}"!="foo"]?"g(${VM_GAIN})":"")})
exten => s,n,GotoIf($["foo${DB(${BLKVM_OVERRIDE})}" != "fooTRUE"]?vmx,1)
exten => s,n,Noop(CAME FROM: ${NODEST} - Blocking VM cause of key: ${DB(BLKVM_OVERRIDE)})
exten => s,n,Hangup
exten => vmx,1,Set(MEXTEN=${ARG1})
exten => vmx,n,Set(MMODE=${ARG2})
exten => vmx,n,Set(RETVM=${ARG3})
exten => vmx,n,Set(MODE=${IF($["${MMODE}"="BUSY"]?busy:unavail)})
exten => vmx,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/vmxopts/timeout)}" = "0"]?chknomsg)
exten => vmx,n,Set(VM_OPTS=${DB_RESULT})
exten => vmx,n(chknomsg),GotoIf($["${MMODE}"="NOMESSAGE"]?s-${MMODE},1)
exten => vmx,n,GotoIf($["${MMODE}" != "DIRECTDIAL"]?notdirect)
exten => vmx,n,Set(MODE=${IF($["${REGEX("[b]" ${VM_DDTYPE})}" = "1"]?busy:${MODE})})
exten => vmx,n(notdirect),Noop(Checking if ext ${MEXTEN} is enabled: ${DB(AMPUSER/${MEXTEN}/vmx/${MODE}/state)})
exten => vmx,n,GotoIf($["${DB(AMPUSER/${MEXTEN}/vmx/${MODE}/state)}" != "enabled"]?s-${MMODE},1)
exten => vmx,n,Macro(get-vmcontext,${MEXTEN})
exten => vmx,n,GotoIf($[(${STAT(f,${ASTSPOOLDIR}/voicemail/${VMCONTEXT}/${MEXTEN}/temp.wav)} = 1) || (${STAT(f,${ASTSPOOLDIR}/voicemail/${VMCONTEXT}/${MEXTEN}/temp.WAV)} = 1)]?tmpgreet)
exten => vmx,n,GotoIf($[(${STAT(f,${ASTSPOOLDIR}/voicemail/${VMCONTEXT}/${MEXTEN}/${MODE}.wav)} = 0) && (${STAT(f,${ASTSPOOLDIR}/voicemail/${VMCONTEXT}/${MEXTEN}/${MODE}.WAV)} = 0)]?nofile)
exten => vmx,n,Set(LOOPCOUNT=0)
exten => vmx,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/repeat)}" = "0"]?vmxtime)
exten => vmx,n,Set(VMX_REPEAT=${DB_RESULT})
exten => vmx,n(vmxtime),GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/timeout)}" = "0"]?vmxloops)
exten => vmx,n,Set(VMX_TIMEOUT=${DB_RESULT})
exten => vmx,n(vmxloops),GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/loops)}" = "0"]?vmxanswer)
exten => vmx,n,Set(VMX_LOOPS=${DB_RESULT})
exten => vmx,n(vmxanswer),Answer
exten => vmx,n(loopstart),Read(ACTION,${ASTSPOOLDIR}/voicemail/${VMCONTEXT}/${MEXTEN}/${MODE},1,skip,${VMX_REPEAT},${VMX_TIMEOUT})
exten => vmx,n,GotoIf($["${EXISTS(${ACTION})}" = "1"]?checkopt)
exten => vmx,n(noopt),Noop(Timeout: going to timeout dest)
exten => vmx,n,Set(VMX_OPTS=${VMX_OPTS_TIMEOUT})
exten => vmx,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/vmxopts/timeout)}" = "0"]?chktime)
exten => vmx,n,Set(VMX_OPTS=${DB_RESULT})
exten => vmx,n(chktime),GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/timedest/ext)}" = "0"]?dotime)
exten => vmx,n,Set(VMX_TIMEDEST_EXT=${DB_RESULT})
exten => vmx,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/timedest/context)}" = "0"]?timepri)
exten => vmx,n,Set(VMX_TIMEDEST_CONTEXT=${DB_RESULT})
exten => vmx,n(timepri),GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/timedest/pri)}" = "0"]?dotime)
exten => vmx,n,Set(VMX_TIMEDEST_PRI=${DB_RESULT})
exten => vmx,n(dotime),Goto(${VMX_TIMEDEST_CONTEXT},${VMX_TIMEDEST_EXT},${VMX_TIMEDEST_PRI})
exten => vmx,n(checkopt),GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/${ACTION}/ext)}" = "1"]?doopt)
exten => vmx,n,GotoIf($["${ACTION}" = "0"]?o,1)
exten => vmx,n,GotoIf($["${ACTION}" = "*"]?adef,1)
exten => vmx,n,Set(LOOPCOUNT=$[${LOOPCOUNT} + 1])
exten => vmx,n,GotoIf($[${LOOPCOUNT} > ${VMX_LOOPS}]?toomany)
exten => vmx,n,Playback(pm-invalid-option&please-try-again)
exten => vmx,n,Goto(loopstart)
exten => vmx,n(toomany),Noop(Too Many invalid entries, got to invalid dest)
exten => vmx,n,Set(VMX_OPTS=${VMX_OPTS_LOOPS})
exten => vmx,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/vmxopts/loops)}" = "0"]?chkloop)
exten => vmx,n,Set(VMX_OPTS=${DB_RESULT})
exten => vmx,n(chkloop),GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/loopdest/ext)}" = "0"]?doloop)
exten => vmx,n,Set(VMX_LOOPDEST_EXT=${DB_RESULT})
exten => vmx,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/loopdest/context)}" = "0"]?looppri)
exten => vmx,n,Set(VMX_LOOPDEST_CONTEXT=${DB_RESULT})
exten => vmx,n(looppri),GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/loopdest/pri)}" = "0"]?doloop)
exten => vmx,n,Set(VMX_LOOPDEST_PRI=${DB_RESULT})
exten => vmx,n(doloop),Goto(${VMX_LOOPDEST_CONTEXT},${VMX_LOOPDEST_EXT},${VMX_LOOPDEST_PRI})
exten => vmx,n(doopt),Noop(Got a valid option: ${DB_RESULT})
exten => vmx,n,Set(VMX_EXT=${DB_RESULT})
exten => vmx,n,GotoIf($["${VMX_EXT}" != "dovm"]?getdest)
exten => vmx,n(vmxopts),Set(VMX_OPTS=${VMX_OPTS_DOVM})
exten => vmx,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/vmxopts/dovm)}" = "0"]?vmxdovm)
exten => vmx,n(vmxopts),Set(VMX_OPTS=${DB_RESULT})
exten => vmx,n(vmxdovm),Goto(dovm,1)
exten => vmx,n(getdest),GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/${ACTION}/context)}" = "0"]?vmxpri)
exten => vmx,n,Set(VMX_CONTEXT=${DB_RESULT})
exten => vmx,n(vmxpri),GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/${ACTION}/pri)}" = "0"]?vmxgoto)
exten => vmx,n,Set(VMX_PRI=${DB_RESULT})
exten => vmx,n(vmxgoto),Goto(${VMX_CONTEXT},${VMX_EXT},${VMX_PRI})
exten => vmx,n(nofile),Noop(File for mode: ${MODE} does not exist, SYSTEMSTATUS: ${SYSTEMSTATUS}, going to normal voicemail)
exten => vmx,n,Goto(s-${MMODE},1)
exten => vmx,n(tmpgreet),Noop(Temporary Greeting Detected, going to normal voicemail)
exten => vmx,n,Goto(s-${MMODE},1)
exten => dovm,1,Noop(VMX Timeout - go to voicemail)
exten => dovm,n,VoiceMail(${MEXTEN}@${VMCONTEXT},${VMX_OPTS}${VMGAIN})
exten => dovm,n,Goto(exit-${VMSTATUS},1)
exten => s-BUSY,1,Noop(BUSY voicemail)
exten => s-BUSY,n,Macro(get-vmcontext,${MEXTEN})
exten => s-BUSY,n,VoiceMail(${MEXTEN}@${VMCONTEXT},${VM_OPTS}b${VMGAIN})
exten => s-BUSY,n,Goto(exit-${VMSTATUS},1)
exten => s-NOMESSAGE,1,Noop(NOMESSAGE (beeb only) voicemail)
exten => s-NOMESSAGE,n,Macro(get-vmcontext,${MEXTEN})
exten => s-NOMESSAGE,n,VoiceMail(${MEXTEN}@${VMCONTEXT},s${VM_OPTS}${VMGAIN})
exten => s-NOMESSAGE,n,Goto(exit-${VMSTATUS},1)
exten => s-DIRECTDIAL,1,Noop(DIRECTDIAL voicemail)
exten => s-DIRECTDIAL,n,Macro(get-vmcontext,${MEXTEN})
exten => s-DIRECTDIAL,n,VoiceMail(${MEXTEN}@${VMCONTEXT},${VM_OPTS}${VM_DDTYPE}${VMGAIN})
exten => s-DIRECTDIAL,n,Goto(exit-${VMSTATUS},1)
exten => _s-.,1,Macro(get-vmcontext,${MEXTEN})
exten => _s-.,n,VoiceMail(${MEXTEN}@${VMCONTEXT},${VM_OPTS}u${VMGAIN})
exten => _s-.,n,Goto(exit-${VMSTATUS},1)
exten => o,1,Playback(one-moment-please)
exten => o,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/0/ext)}" = "0"]?doopdef)
exten => o,n,Set(VMX_OPDEST_EXT=${DB_RESULT})
exten => o,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/0/context)}" = "1"]?opcontext)
exten => o,n,Set(DB_RESULT=${VMX_CONTEXT})
exten => o,n(opcontext),Set(VMX_OPDEST_CONTEXT=${DB_RESULT})
exten => o,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/0/pri)}" = "1"]?oppri)
exten => o,n,Set(DB_RESULT=${VMX_PRI})
exten => o,n(oppri),Set(VMX_OPDEST_PRI=${DB_RESULT})
exten => o,n,Goto(${VMX_OPDEST_CONTEXT},${VMX_OPDEST_EXT},${VMX_OPDEST_PRI})
exten => o,n(doopdef),GotoIf($["x${OPERATOR_XTN}"="x"]?nooper:from-internal,${OPERATOR_XTN},1)
exten => o,n(nooper),GotoIf($["x${FROM_DID}"="x"]?nodid)
exten => o,n,Dial(Local/${FROM_DID}@from-pstn,)
exten => o,n,Macro(hangup,)
exten => o,n(nodid),Dial(Local/s@from-pstn,)
exten => o,n,Macro(hangup,)
exten => a,1,Macro(get-vmcontext,${MEXTEN})
exten => a,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/*/ext)}" = "0"]?adef,1)
exten => a,n,Set(VMX_ADEST_EXT=${DB_RESULT})
exten => a,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/*/context)}" = "1"]?acontext)
exten => a,n,Set(DB_RESULT=${VMX_CONTEXT})
exten => a,n(acontext),Set(VMX_ADEST_CONTEXT=${DB_RESULT})
exten => a,n,GotoIf($["${DB_EXISTS(AMPUSER/${MEXTEN}/vmx/${MODE}/*/pri)}" = "1"]?apri)
exten => a,n,Set(DB_RESULT=${VMX_PRI})
exten => a,n(apri),Set(VMX_ADEST_PRI=${DB_RESULT})
exten => a,n,Goto(${VMX_ADEST_CONTEXT},${VMX_ADEST_EXT},${VMX_ADEST_PRI})
exten => adef,1,VoiceMailMain(${MEXTEN}@${VMCONTEXT})
exten => adef,n,GotoIf($["${RETVM}" = "RETURN"]?exit-RETURN,1)
exten => adef,n,Hangup
exten => exit-FAILED,1,Playback(im-sorry&an-error-has-occured)
exten => exit-FAILED,n,GotoIf($["${RETVM}" = "RETURN"]?exit-RETURN,1)
exten => exit-FAILED,n,Hangup
exten => exit-SUCCESS,1,GotoIf($["${RETVM}" = "RETURN"]?exit-RETURN,1)
exten => exit-SUCCESS,n,Playback(goodbye)
exten => exit-SUCCESS,n,Hangup
exten => exit-USEREXIT,1,GotoIf($["${RETVM}" = "RETURN"]?exit-RETURN,1)
exten => exit-USEREXIT,n,Playback(goodbye)
exten => exit-USEREXIT,n,Hangup
exten => exit-RETURN,1,Noop(Returning From Voicemail because macro)
exten => t,1,Hangup

; end of [macro-vm]


[macro-exten-vm]
include => macro-exten-vm-custom
exten => s,1,Macro(user-callerid,)
exten => s,n,Set(RingGroupMethod=none)
exten => s,n,Set(VMBOX=${ARG1})
exten => s,n,Set(EXTTOCALL=${ARG2})
exten => s,n,Set(CFUEXT=${DB(CFU/${EXTTOCALL})})
exten => s,n,Set(CFBEXT=${DB(CFB/${EXTTOCALL})})
exten => s,n,Set(RT=${IF($[$["${VMBOX}"!="novm"] | $["${CFUEXT}"!=""]]?${RINGTIMER}:"")})
exten => s,n(checkrecord),Macro(record-enable,${EXTTOCALL},IN)
exten => s,n(macrodial),Macro(dial,${RT},${DIAL_OPTIONS},${EXTTOCALL})
exten => s,n,GotoIf($["${VMBOX}"!="novm" & "${SCREEN}"!="" & "${DIALSTATUS}"="NOANSWER"]?exit,return)
exten => s,n,Set(SV_DIALSTATUS=${DIALSTATUS})
exten => s,n(calldocfu),GosubIf($["${SV_DIALSTATUS}"="NOANSWER" & "${CFUEXT}"!="" & "${SCREEN}"=""]?docfu,1)
exten => s,n(calldocfb),GosubIf($["${SV_DIALSTATUS}"="BUSY" & "${CFBEXT}"!=""]?docfb,1)
exten => s,n,Set(DIALSTATUS=${SV_DIALSTATUS})
exten => s,n,Noop(Voicemail is '${VMBOX}')
exten => s,n,GotoIf($["${VMBOX}"="novm"]?s-${DIALSTATUS},1)
exten => s,n,Noop(Sending to Voicemail box ${EXTTOCALL})
exten => s,n,Macro(vm,${VMBOX},${DIALSTATUS},${IVR_RETVM})
exten => docfu,1(docfu),Set(RTCFU=${IF($["${VMBOX}"!="novm"]?${RINGTIMER}:"")})
exten => docfu,n,Dial(Local/${CFUEXT}@from-internal/n,${RTCFU},${DIAL_OPTIONS})
exten => docfu,n,Return()
exten => docfb,1(docfb),Set(RTCFB=${IF($["${VMBOX}"!="novm"]?${RINGTIMER}:"")})
exten => docfb,n,Dial(Local/${CFUEXT}@from-internal/n,${RTCFB},${DIAL_OPTIONS})
exten => docfb,n,Return()
exten => s-BUSY,1,Noop(Extension is reporting BUSY and not passing to Voicemail)
exten => s-BUSY,n,GotoIf($["${IVR_RETVM}"="RETURN" & "${IVR_CONTEXT}"!=""]?exit,1)
exten => s-BUSY,n,Playtones(busy)
exten => s-BUSY,n,Busy(20)
exten => _s-.,1,Noop(IVR_RETVM: ${IVR_RETVM} IVR_CONTEXT: ${IVR_CONTEXT})
exten => _s-.,n,GotoIf($["${IVR_RETVM}"="RETURN" & "${IVR_CONTEXT}"!=""]?exit,1)
exten => _s-.,n,Playtones(congestion)
exten => _s-.,n,Congestion(10)
exten => exit,1,Playback(beep&line-busy-transfer-menu&silence/1)
exten => exit,n,MacroExit()

; end of [macro-exten-vm]


[macro-simple-dial]
include => macro-simple-dial-custom
exten => s,1,Set(EXTTOCALL=${ARG1})
exten => s,n,Set(RT=${ARG2})
exten => s,n,Set(CFUEXT=${DB(CFU/${EXTTOCALL})})
exten => s,n,Set(CFBEXT=${DB(CFB/${EXTTOCALL})})
exten => s,n,Set(CWI_TMP=${CWIGNORE})
exten => s,n(macrodial),Macro(dial,${RT},${DIAL_OPTIONS},${EXTTOCALL})
exten => s,n,Set(__CWIGNORE=${CWI_TMP})
exten => s,n,Set(PR_DIALSTATUS=${DIALSTATUS})
exten => s,n(calldocfu),GosubIf($["${PR_DIALSTATUS}"="NOANSWER" & "${CFUEXT}"!=""]?docfu,1)
exten => s,n(calldocfb),GosubIf($["${PR_DIALSTATUS}"="BUSY" & "${CFBEXT}"!=""]?docfb,1)
exten => s,n,Set(DIALSTATUS=${PR_DIALSTATUS})
exten => s,n,Goto(s-${DIALSTATUS},1)
exten => docfu,1,GotoIf($["${DB(AMPUSER/${CFUEXT}/device)}" = "" ]?chlocal)
exten => docfu,n,Dial(Local/${CFUEXT}@ext-local,${RT},${DIAL_OPTIONS})
exten => docfu,n,Return()
exten => docfu,n(chlocal),Dial(Local/${CFUEXT}@from-internal/n,${RT},${DIAL_OPTIONS})
exten => docfu,n,Return()
exten => docfb,1,GotoIf($["${DB(AMPUSER/${CFBEXT}/device)}" = "" ]?chlocal)
exten => docfb,n,Dial(Local/${CFBEXT}@ext-local,${RT},${DIAL_OPTIONS})
exten => docfb,n,Return()
exten => docfb,n(chlocal),Dial(Local/${CFBEXT}@from-internal/n,${RT},${DIAL_OPTIONS})
exten => docfb,n,Return()
exten => _s-.,1,Noop(Extension is reporting ${EXTEN})

; end of [macro-simple-dial]


[macro-hangupcall]
include => macro-hangupcall-custom
exten => s,1(start),GotoIf($["${USE_CONFIRMATION}"="" | "${RINGGROUP_INDEX}"="" | "${CHANNEL}"!="${UNIQCHAN}"]?skiprg)
exten => s,n,Noop(Cleaning Up Confirmation Flag: RG/${RINGGROUP_INDEX}/${CHANNEL})
exten => s,n(delrgi),Noop(Deleting: RG/${RINGGROUP_INDEX}/${CHANNEL} ${DB_DELETE(RG/${RINGGROUP_INDEX}/${CHANNEL})})
exten => s,n(skiprg),GotoIf($["${BLKVM_BASE}"="" | "BLKVM/${BLKVM_BASE}/${CHANNEL}"!="${BLKVM_OVERRIDE}"]?skipblkvm)
exten => s,n,Noop(Cleaning Up Block VM Flag: ${BLKVM_OVERRIDE})
exten => s,n(delblkvm),Noop(Deleting: ${BLKVM_OVERRIDE} ${DB_DELETE(${BLKVM_OVERRIDE})})
exten => s,n(skipblkvm),GotoIf($["${FMGRP}"="" | "${FMUNIQUE}"="" | "${CHANNEL}"!="${FMUNIQUE}"]?theend)
exten => s,n(delfmrgp),Noop(Deleting: FM/DND/${FMGRP}/${CHANNEL} ${DB_DELETE(FM/DND/${FMGRP}/${CHANNEL})})
exten => s,n(theend),Hangup

; end of [macro-hangupcall]


[from-internal-additional]
include => from-internal-additional-custom
include => app-fmf-toggle
include => ext-findmefollow
include => fmgrps
include => app-callwaiting-cwoff
include => app-callwaiting-cwon
include => ext-queues
include => app-queue-toggle
include => app-pbdirectory
include => ext-group
include => grps
include => app-calltrace
include => app-directory
include => app-echo-test
include => app-speakextennum
include => app-speakingclock
include => app-cf-busy-off
include => app-cf-busy-off-any
include => app-cf-busy-on
include => app-cf-off
include => app-cf-off-any
include => app-cf-on
include => app-cf-unavailable-off
include => app-cf-unavailable-on
include => app-cf-toggle
include => ext-cf-hints
include => app-daynight-toggle
include => app-recordings
include => app-dialvm
include => app-vmmain
include => app-miscapps-1
include => app-miscapps-2
include => app-miscapps-3
include => app-userlogonoff
include => app-pickup
include => app-zapbarge
include => app-chanspy
include => ext-test
include => ext-local
include => outbound-allroutes
exten => h,1,Hangup

; end of [from-internal-additional]


